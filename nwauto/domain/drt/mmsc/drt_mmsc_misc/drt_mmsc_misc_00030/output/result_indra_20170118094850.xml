<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170118 12:14:02.223" generator="Robot 3.0 (Python 2.7.5 on linux2)">
<suite source="/home/indra/mmsc/ipafw_v1.0.3/nwauto/domain/drt/mmsc/drt_mmsc_misc/drt_mmsc_misc_00030/drt_mmsc_misc_00030.txt" id="s1" name="Drt Mmsc Misc 00030">
<test id="s1-t1" name="drt_mmsc_misc_00030">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TESTCASE INITIALIZE SECTION creates test case object and populate it with information from yaml file.</arg>
</arguments>
<msg timestamp="20170118 12:14:02.449" level="INFO">TESTCASE INITIALIZE SECTION creates test case object and populate it with information from yaml file.</msg>
<status status="PASS" endtime="20170118 12:14:02.450" starttime="20170118 12:14:02.449"></status>
</kw>
<kw name="Setup" library="drt_mmsc_misc_00030">
<status status="PASS" endtime="20170118 12:14:02.451" starttime="20170118 12:14:02.450"></status>
</kw>
<kw name="Perfecto Steps" library="drt_mmsc_misc_00030">
<status status="PASS" endtime="20170118 12:14:02.452" starttime="20170118 12:14:02.451"></status>
</kw>
<kw name="Pcap Parsing Steps" library="drt_mmsc_misc_00030">
<msg timestamp="20170118 12:14:35.492" level="INFO">frameworkTestDriver: printYAMLFileInputs:  file name:  ngn_global_variables.yaml
frameworkTestDriver: printYAMLFileInputs:  name space:  NGN
frameworkTestDriver: printYAMLFileInputs:  YAML FILE INPUTS for:  ngn_global_variables.yaml :  {'IPaddress': {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}}
frameworkTestDriver: printYAMLFileInputs:  file name:  drt_mmsc_misc_00030_tcvariables.yaml
frameworkTestDriver: printYAMLFileInputs:  name space:  TC00030
frameworkTestDriver: printYAMLFileInputs:  YAML FILE INPUTS for:  drt_mmsc_misc_00030_tcvariables.yaml :  {'PHONES_TEST': {'UEA': {'SGSNIP': '216.155.164.8', 'CHARGINGID': '89478486', 'MSISDN_A': '12064465370', 'IMSI': '310260564154655'}, 'UEB': {'SGSNIP': '216.155.164.7', 'CHARGINGID': '100663391', 'MSISDN_B': '14253196810', 'IMSI': '310260549276210'}}, 'PCAP_FILES': {'PCAP_FILE_LOCATION': '/tmp/', 'PCAP': 'drt_mmsc_misc_00030.pcap'}, 'PHONES': {'UEA': {'SGSNIP': '216.155.164.10', 'CHARGINGID': '206919110', 'MSISDN_A': '12010500100', 'IMSI': '310310990010060', 'DEV_ID': '33002CA1258F23C5'}, 'UEB': {'SGSNIP': '216.155.164.4', 'CHARGINGID': '150995104', 'MSISDN_B': '12010500082', 'IMSI': '310310990010042', 'DEV_ID': '33005DA736E8139D'}}, 'WIRESHARK': {'USERNAME': 'ranthony', 'DISPLAY_FILTER': "'mmse or http or diameter.cmd.code==306 or smpp or gsm_sms_ud or wsp and not tcp.analysis.retransmission'", 'WIRESHARK_IP': '10.25.17.8', 'INTERFACE': 'eth2', 'CAPTURE_FILTER': "'host 10.174.68.40 || host 66.94.14.244 || host 66.94.13.123 || host 10.174.50.68 || host 10.168.210.90 || host 10.168.217.78 || host 10.174.58.70 || host 10.174.58.71 || host 10.174.58.90 || host 10.174.58.91 || host 10.174.58.68 || host 10.174.58.69 || host 10.174.58.88 || host 10.174.58.89 || host 10.168.217.84 || host 10.168.217.85 || host 10.174.68.73 || host 10.174.68.73 || host 10.174.68.74 || host 10.174.68.93 || host 10.174.68.84 || host 10.174.68.85 || host 10.168.210.88 || host 10.168.217.70 || host 172.18.74.22 || host 10.169.53.146 || host 10.169.53.139 || host 10.168.212.106 || host 10.174.53.142 || host 66.94.3.68 || host 10.174.68.92 || host 10.174.68.6 || host 10.174.50.69 || host 172.24.64.118 || host 172.16.74.22'", 'DECODE_AS': "'tcp.port==10000,smpp'", 'PASSWORD': 'ranthony', 'PORT': 22}}
frameworkTestDriver: evalSetVariable:  variable:  YAML_MSISDN_A=$TC00030:PHONES:UEA:MSISDN_A
frameworkTestDriver: evalSetVariable:  the var is:  YAML_MSISDN_A
frameworkTestDriver: evalSetVariable:  key list first elem:  TC00030
frameworkTestDriver: evalSetVariable:  	key is:  TC00030
frameworkTestDriver: evalSetVariable:  	dict now is  {'PHONES_TEST': {'UEA': {'SGSNIP': '216.155.164.8', 'CHARGINGID': '89478486', 'MSISDN_A': '12064465370', 'IMSI': '310260564154655'}, 'UEB': {'SGSNIP': '216.155.164.7', 'CHARGINGID': '100663391', 'MSISDN_B': '14253196810', 'IMSI': '310260549276210'}}, 'PCAP_FILES': {'PCAP_FILE_LOCATION': '/tmp/', 'PCAP': 'drt_mmsc_misc_00030.pcap'}, 'PHONES': {'UEA': {'SGSNIP': '216.155.164.10', 'CHARGINGID': '206919110', 'MSISDN_A': '12010500100', 'IMSI': '310310990010060', 'DEV_ID': '33002CA1258F23C5'}, 'UEB': {'SGSNIP': '216.155.164.4', 'CHARGINGID': '150995104', 'MSISDN_B': '12010500082', 'IMSI': '310310990010042', 'DEV_ID': '33005DA736E8139D'}}, 'WIRESHARK': {'USERNAME': 'ranthony', 'DISPLAY_FILTER': "'mmse or http or diameter.cmd.code==306 or smpp or gsm_sms_ud or wsp and not tcp.analysis.retransmission'", 'WIRESHARK_IP': '10.25.17.8', 'INTERFACE': 'eth2', 'CAPTURE_FILTER': "'host 10.174.68.40 || host 66.94.14.244 || host 66.94.13.123 || host 10.174.50.68 || host 10.168.210.90 || host 10.168.217.78 || host 10.174.58.70 || host 10.174.58.71 || host 10.174.58.90 || host 10.174.58.91 || host 10.174.58.68 || host 10.174.58.69 || host 10.174.58.88 || host 10.174.58.89 || host 10.168.217.84 || host 10.168.217.85 || host 10.174.68.73 || host 10.174.68.73 || host 10.174.68.74 || host 10.174.68.93 || host 10.174.68.84 || host 10.174.68.85 || host 10.168.210.88 || host 10.168.217.70 || host 172.18.74.22 || host 10.169.53.146 || host 10.169.53.139 || host 10.168.212.106 || host 10.174.53.142 || host 66.94.3.68 || host 10.174.68.92 || host 10.174.68.6 || host 10.174.50.69 || host 172.24.64.118 || host 172.16.74.22'", 'DECODE_AS': "'tcp.port==10000,smpp'", 'PASSWORD': 'ranthony', 'PORT': 22}}
frameworkTestDriver: evalSetVariable:  	key is:  PHONES
frameworkTestDriver: evalSetVariable:  	dict now is  {'UEA': {'SGSNIP': '216.155.164.10', 'CHARGINGID': '206919110', 'MSISDN_A': '12010500100', 'IMSI': '310310990010060', 'DEV_ID': '33002CA1258F23C5'}, 'UEB': {'SGSNIP': '216.155.164.4', 'CHARGINGID': '150995104', 'MSISDN_B': '12010500082', 'IMSI': '310310990010042', 'DEV_ID': '33005DA736E8139D'}}
frameworkTestDriver: evalSetVariable:  	key is:  UEA
frameworkTestDriver: evalSetVariable:  	dict now is  {'SGSNIP': '216.155.164.10', 'CHARGINGID': '206919110', 'MSISDN_A': '12010500100', 'IMSI': '310310990010060', 'DEV_ID': '33002CA1258F23C5'}
frameworkTestDriver: evalSetVariable:  	key is:  MSISDN_A
frameworkTestDriver: evalSetVariable:  	dict now is  12010500100
frameworkTestDriver: evalSetVariable:  YAML_MSISDN_A : value is:  12010500100
frameworkTestDriver: evalSetVariable:  variable:  YAML_IMSI_A=$TC00030:PHONES:UEA:IMSI
frameworkTestDriver: evalSetVariable:  the var is:  YAML_IMSI_A
frameworkTestDriver: evalSetVariable:  key list first elem:  TC00030
frameworkTestDriver: evalSetVariable:  	key is:  TC00030
frameworkTestDriver: evalSetVariable:  	dict now is  {'PHONES_TEST': {'UEA': {'SGSNIP': '216.155.164.8', 'CHARGINGID': '89478486', 'MSISDN_A': '12064465370', 'IMSI': '310260564154655'}, 'UEB': {'SGSNIP': '216.155.164.7', 'CHARGINGID': '100663391', 'MSISDN_B': '14253196810', 'IMSI': '310260549276210'}}, 'PCAP_FILES': {'PCAP_FILE_LOCATION': '/tmp/', 'PCAP': 'drt_mmsc_misc_00030.pcap'}, 'PHONES': {'UEA': {'SGSNIP': '216.155.164.10', 'CHARGINGID': '206919110', 'MSISDN_A': '12010500100', 'IMSI': '310310990010060', 'DEV_ID': '33002CA1258F23C5'}, 'UEB': {'SGSNIP': '216.155.164.4', 'CHARGINGID': '150995104', 'MSISDN_B': '12010500082', 'IMSI': '310310990010042', 'DEV_ID': '33005DA736E8139D'}}, 'WIRESHARK': {'USERNAME': 'ranthony', 'DISPLAY_FILTER': "'mmse or http or diameter.cmd.code==306 or smpp or gsm_sms_ud or wsp and not tcp.analysis.retransmission'", 'WIRESHARK_IP': '10.25.17.8', 'INTERFACE': 'eth2', 'CAPTURE_FILTER': "'host 10.174.68.40 || host 66.94.14.244 || host 66.94.13.123 || host 10.174.50.68 || host 10.168.210.90 || host 10.168.217.78 || host 10.174.58.70 || host 10.174.58.71 || host 10.174.58.90 || host 10.174.58.91 || host 10.174.58.68 || host 10.174.58.69 || host 10.174.58.88 || host 10.174.58.89 || host 10.168.217.84 || host 10.168.217.85 || host 10.174.68.73 || host 10.174.68.73 || host 10.174.68.74 || host 10.174.68.93 || host 10.174.68.84 || host 10.174.68.85 || host 10.168.210.88 || host 10.168.217.70 || host 172.18.74.22 || host 10.169.53.146 || host 10.169.53.139 || host 10.168.212.106 || host 10.174.53.142 || host 66.94.3.68 || host 10.174.68.92 || host 10.174.68.6 || host 10.174.50.69 || host 172.24.64.118 || host 172.16.74.22'", 'DECODE_AS': "'tcp.port==10000,smpp'", 'PASSWORD': 'ranthony', 'PORT': 22}}
frameworkTestDriver: evalSetVariable:  	key is:  PHONES
frameworkTestDriver: evalSetVariable:  	dict now is  {'UEA': {'SGSNIP': '216.155.164.10', 'CHARGINGID': '206919110', 'MSISDN_A': '12010500100', 'IMSI': '310310990010060', 'DEV_ID': '33002CA1258F23C5'}, 'UEB': {'SGSNIP': '216.155.164.4', 'CHARGINGID': '150995104', 'MSISDN_B': '12010500082', 'IMSI': '310310990010042', 'DEV_ID': '33005DA736E8139D'}}
frameworkTestDriver: evalSetVariable:  	key is:  UEA
frameworkTestDriver: evalSetVariable:  	dict now is  {'SGSNIP': '216.155.164.10', 'CHARGINGID': '206919110', 'MSISDN_A': '12010500100', 'IMSI': '310310990010060', 'DEV_ID': '33002CA1258F23C5'}
frameworkTestDriver: evalSetVariable:  	key is:  IMSI
frameworkTestDriver: evalSetVariable:  	dict now is  310310990010060
frameworkTestDriver: evalSetVariable:  YAML_IMSI_A : value is:  310310990010060
frameworkTestDriver: evalSetVariable:  variable:  YAML_MSISDN_B=$TC00030:PHONES:UEB:MSISDN_B
frameworkTestDriver: evalSetVariable:  the var is:  YAML_MSISDN_B
frameworkTestDriver: evalSetVariable:  key list first elem:  TC00030
frameworkTestDriver: evalSetVariable:  	key is:  TC00030
frameworkTestDriver: evalSetVariable:  	dict now is  {'PHONES_TEST': {'UEA': {'SGSNIP': '216.155.164.8', 'CHARGINGID': '89478486', 'MSISDN_A': '12064465370', 'IMSI': '310260564154655'}, 'UEB': {'SGSNIP': '216.155.164.7', 'CHARGINGID': '100663391', 'MSISDN_B': '14253196810', 'IMSI': '310260549276210'}}, 'PCAP_FILES': {'PCAP_FILE_LOCATION': '/tmp/', 'PCAP': 'drt_mmsc_misc_00030.pcap'}, 'PHONES': {'UEA': {'SGSNIP': '216.155.164.10', 'CHARGINGID': '206919110', 'MSISDN_A': '12010500100', 'IMSI': '310310990010060', 'DEV_ID': '33002CA1258F23C5'}, 'UEB': {'SGSNIP': '216.155.164.4', 'CHARGINGID': '150995104', 'MSISDN_B': '12010500082', 'IMSI': '310310990010042', 'DEV_ID': '33005DA736E8139D'}}, 'WIRESHARK': {'USERNAME': 'ranthony', 'DISPLAY_FILTER': "'mmse or http or diameter.cmd.code==306 or smpp or gsm_sms_ud or wsp and not tcp.analysis.retransmission'", 'WIRESHARK_IP': '10.25.17.8', 'INTERFACE': 'eth2', 'CAPTURE_FILTER': "'host 10.174.68.40 || host 66.94.14.244 || host 66.94.13.123 || host 10.174.50.68 || host 10.168.210.90 || host 10.168.217.78 || host 10.174.58.70 || host 10.174.58.71 || host 10.174.58.90 || host 10.174.58.91 || host 10.174.58.68 || host 10.174.58.69 || host 10.174.58.88 || host 10.174.58.89 || host 10.168.217.84 || host 10.168.217.85 || host 10.174.68.73 || host 10.174.68.73 || host 10.174.68.74 || host 10.174.68.93 || host 10.174.68.84 || host 10.174.68.85 || host 10.168.210.88 || host 10.168.217.70 || host 172.18.74.22 || host 10.169.53.146 || host 10.169.53.139 || host 10.168.212.106 || host 10.174.53.142 || host 66.94.3.68 || host 10.174.68.92 || host 10.174.68.6 || host 10.174.50.69 || host 172.24.64.118 || host 172.16.74.22'", 'DECODE_AS': "'tcp.port==10000,smpp'", 'PASSWORD': 'ranthony', 'PORT': 22}}
frameworkTestDriver: evalSetVariable:  	key is:  PHONES
frameworkTestDriver: evalSetVariable:  	dict now is  {'UEA': {'SGSNIP': '216.155.164.10', 'CHARGINGID': '206919110', 'MSISDN_A': '12010500100', 'IMSI': '310310990010060', 'DEV_ID': '33002CA1258F23C5'}, 'UEB': {'SGSNIP': '216.155.164.4', 'CHARGINGID': '150995104', 'MSISDN_B': '12010500082', 'IMSI': '310310990010042', 'DEV_ID': '33005DA736E8139D'}}
frameworkTestDriver: evalSetVariable:  	key is:  UEB
frameworkTestDriver: evalSetVariable:  	dict now is  {'SGSNIP': '216.155.164.4', 'CHARGINGID': '150995104', 'MSISDN_B': '12010500082', 'IMSI': '310310990010042', 'DEV_ID': '33005DA736E8139D'}
frameworkTestDriver: evalSetVariable:  	key is:  MSISDN_B
frameworkTestDriver: evalSetVariable:  	dict now is  12010500082
frameworkTestDriver: evalSetVariable:  YAML_MSISDN_B : value is:  12010500082
frameworkTestDriver: evalSetVariable:  variable:  YAML_IMSI_B=$TC00030:PHONES:UEB:IMSI
frameworkTestDriver: evalSetVariable:  the var is:  YAML_IMSI_B
frameworkTestDriver: evalSetVariable:  key list first elem:  TC00030
frameworkTestDriver: evalSetVariable:  	key is:  TC00030
frameworkTestDriver: evalSetVariable:  	dict now is  {'PHONES_TEST': {'UEA': {'SGSNIP': '216.155.164.8', 'CHARGINGID': '89478486', 'MSISDN_A': '12064465370', 'IMSI': '310260564154655'}, 'UEB': {'SGSNIP': '216.155.164.7', 'CHARGINGID': '100663391', 'MSISDN_B': '14253196810', 'IMSI': '310260549276210'}}, 'PCAP_FILES': {'PCAP_FILE_LOCATION': '/tmp/', 'PCAP': 'drt_mmsc_misc_00030.pcap'}, 'PHONES': {'UEA': {'SGSNIP': '216.155.164.10', 'CHARGINGID': '206919110', 'MSISDN_A': '12010500100', 'IMSI': '310310990010060', 'DEV_ID': '33002CA1258F23C5'}, 'UEB': {'SGSNIP': '216.155.164.4', 'CHARGINGID': '150995104', 'MSISDN_B': '12010500082', 'IMSI': '310310990010042', 'DEV_ID': '33005DA736E8139D'}}, 'WIRESHARK': {'USERNAME': 'ranthony', 'DISPLAY_FILTER': "'mmse or http or diameter.cmd.code==306 or smpp or gsm_sms_ud or wsp and not tcp.analysis.retransmission'", 'WIRESHARK_IP': '10.25.17.8', 'INTERFACE': 'eth2', 'CAPTURE_FILTER': "'host 10.174.68.40 || host 66.94.14.244 || host 66.94.13.123 || host 10.174.50.68 || host 10.168.210.90 || host 10.168.217.78 || host 10.174.58.70 || host 10.174.58.71 || host 10.174.58.90 || host 10.174.58.91 || host 10.174.58.68 || host 10.174.58.69 || host 10.174.58.88 || host 10.174.58.89 || host 10.168.217.84 || host 10.168.217.85 || host 10.174.68.73 || host 10.174.68.73 || host 10.174.68.74 || host 10.174.68.93 || host 10.174.68.84 || host 10.174.68.85 || host 10.168.210.88 || host 10.168.217.70 || host 172.18.74.22 || host 10.169.53.146 || host 10.169.53.139 || host 10.168.212.106 || host 10.174.53.142 || host 66.94.3.68 || host 10.174.68.92 || host 10.174.68.6 || host 10.174.50.69 || host 172.24.64.118 || host 172.16.74.22'", 'DECODE_AS': "'tcp.port==10000,smpp'", 'PASSWORD': 'ranthony', 'PORT': 22}}
frameworkTestDriver: evalSetVariable:  	key is:  PHONES
frameworkTestDriver: evalSetVariable:  	dict now is  {'UEA': {'SGSNIP': '216.155.164.10', 'CHARGINGID': '206919110', 'MSISDN_A': '12010500100', 'IMSI': '310310990010060', 'DEV_ID': '33002CA1258F23C5'}, 'UEB': {'SGSNIP': '216.155.164.4', 'CHARGINGID': '150995104', 'MSISDN_B': '12010500082', 'IMSI': '310310990010042', 'DEV_ID': '33005DA736E8139D'}}
frameworkTestDriver: evalSetVariable:  	key is:  UEB
frameworkTestDriver: evalSetVariable:  	dict now is  {'SGSNIP': '216.155.164.4', 'CHARGINGID': '150995104', 'MSISDN_B': '12010500082', 'IMSI': '310310990010042', 'DEV_ID': '33005DA736E8139D'}
frameworkTestDriver: evalSetVariable:  	key is:  IMSI
frameworkTestDriver: evalSetVariable:  	dict now is  310310990010042
frameworkTestDriver: evalSetVariable:  YAML_IMSI_B : value is:  310310990010042
frameworkTestDriver: evalSetVariable:  variable:  YAML_PCAP_FILE=$TC00030:PCAP_FILES:PCAP
frameworkTestDriver: evalSetVariable:  the var is:  YAML_PCAP_FILE
frameworkTestDriver: evalSetVariable:  key list first elem:  TC00030
frameworkTestDriver: evalSetVariable:  	key is:  TC00030
frameworkTestDriver: evalSetVariable:  	dict now is  {'PHONES_TEST': {'UEA': {'SGSNIP': '216.155.164.8', 'CHARGINGID': '89478486', 'MSISDN_A': '12064465370', 'IMSI': '310260564154655'}, 'UEB': {'SGSNIP': '216.155.164.7', 'CHARGINGID': '100663391', 'MSISDN_B': '14253196810', 'IMSI': '310260549276210'}}, 'PCAP_FILES': {'PCAP_FILE_LOCATION': '/tmp/', 'PCAP': 'drt_mmsc_misc_00030.pcap'}, 'PHONES': {'UEA': {'SGSNIP': '216.155.164.10', 'CHARGINGID': '206919110', 'MSISDN_A': '12010500100', 'IMSI': '310310990010060', 'DEV_ID': '33002CA1258F23C5'}, 'UEB': {'SGSNIP': '216.155.164.4', 'CHARGINGID': '150995104', 'MSISDN_B': '12010500082', 'IMSI': '310310990010042', 'DEV_ID': '33005DA736E8139D'}}, 'WIRESHARK': {'USERNAME': 'ranthony', 'DISPLAY_FILTER': "'mmse or http or diameter.cmd.code==306 or smpp or gsm_sms_ud or wsp and not tcp.analysis.retransmission'", 'WIRESHARK_IP': '10.25.17.8', 'INTERFACE': 'eth2', 'CAPTURE_FILTER': "'host 10.174.68.40 || host 66.94.14.244 || host 66.94.13.123 || host 10.174.50.68 || host 10.168.210.90 || host 10.168.217.78 || host 10.174.58.70 || host 10.174.58.71 || host 10.174.58.90 || host 10.174.58.91 || host 10.174.58.68 || host 10.174.58.69 || host 10.174.58.88 || host 10.174.58.89 || host 10.168.217.84 || host 10.168.217.85 || host 10.174.68.73 || host 10.174.68.73 || host 10.174.68.74 || host 10.174.68.93 || host 10.174.68.84 || host 10.174.68.85 || host 10.168.210.88 || host 10.168.217.70 || host 172.18.74.22 || host 10.169.53.146 || host 10.169.53.139 || host 10.168.212.106 || host 10.174.53.142 || host 66.94.3.68 || host 10.174.68.92 || host 10.174.68.6 || host 10.174.50.69 || host 172.24.64.118 || host 172.16.74.22'", 'DECODE_AS': "'tcp.port==10000,smpp'", 'PASSWORD': 'ranthony', 'PORT': 22}}
frameworkTestDriver: evalSetVariable:  	key is:  PCAP_FILES
frameworkTestDriver: evalSetVariable:  	dict now is  {'PCAP_FILE_LOCATION': '/tmp/', 'PCAP': 'drt_mmsc_misc_00030.pcap'}
frameworkTestDriver: evalSetVariable:  	key is:  PCAP
frameworkTestDriver: evalSetVariable:  	dict now is  drt_mmsc_misc_00030.pcap
frameworkTestDriver: evalSetVariable:  YAML_PCAP_FILE : value is:  drt_mmsc_misc_00030.pcap
frameworkTestDriver: evalSetVariable:  variable:  YAML_PCAP_LOCATION=$TC00030:PCAP_FILES:PCAP_FILE_LOCATION
frameworkTestDriver: evalSetVariable:  the var is:  YAML_PCAP_LOCATION
frameworkTestDriver: evalSetVariable:  key list first elem:  TC00030
frameworkTestDriver: evalSetVariable:  	key is:  TC00030
frameworkTestDriver: evalSetVariable:  	dict now is  {'PHONES_TEST': {'UEA': {'SGSNIP': '216.155.164.8', 'CHARGINGID': '89478486', 'MSISDN_A': '12064465370', 'IMSI': '310260564154655'}, 'UEB': {'SGSNIP': '216.155.164.7', 'CHARGINGID': '100663391', 'MSISDN_B': '14253196810', 'IMSI': '310260549276210'}}, 'PCAP_FILES': {'PCAP_FILE_LOCATION': '/tmp/', 'PCAP': 'drt_mmsc_misc_00030.pcap'}, 'PHONES': {'UEA': {'SGSNIP': '216.155.164.10', 'CHARGINGID': '206919110', 'MSISDN_A': '12010500100', 'IMSI': '310310990010060', 'DEV_ID': '33002CA1258F23C5'}, 'UEB': {'SGSNIP': '216.155.164.4', 'CHARGINGID': '150995104', 'MSISDN_B': '12010500082', 'IMSI': '310310990010042', 'DEV_ID': '33005DA736E8139D'}}, 'WIRESHARK': {'USERNAME': 'ranthony', 'DISPLAY_FILTER': "'mmse or http or diameter.cmd.code==306 or smpp or gsm_sms_ud or wsp and not tcp.analysis.retransmission'", 'WIRESHARK_IP': '10.25.17.8', 'INTERFACE': 'eth2', 'CAPTURE_FILTER': "'host 10.174.68.40 || host 66.94.14.244 || host 66.94.13.123 || host 10.174.50.68 || host 10.168.210.90 || host 10.168.217.78 || host 10.174.58.70 || host 10.174.58.71 || host 10.174.58.90 || host 10.174.58.91 || host 10.174.58.68 || host 10.174.58.69 || host 10.174.58.88 || host 10.174.58.89 || host 10.168.217.84 || host 10.168.217.85 || host 10.174.68.73 || host 10.174.68.73 || host 10.174.68.74 || host 10.174.68.93 || host 10.174.68.84 || host 10.174.68.85 || host 10.168.210.88 || host 10.168.217.70 || host 172.18.74.22 || host 10.169.53.146 || host 10.169.53.139 || host 10.168.212.106 || host 10.174.53.142 || host 66.94.3.68 || host 10.174.68.92 || host 10.174.68.6 || host 10.174.50.69 || host 172.24.64.118 || host 172.16.74.22'", 'DECODE_AS': "'tcp.port==10000,smpp'", 'PASSWORD': 'ranthony', 'PORT': 22}}
frameworkTestDriver: evalSetVariable:  	key is:  PCAP_FILES
frameworkTestDriver: evalSetVariable:  	dict now is  {'PCAP_FILE_LOCATION': '/tmp/', 'PCAP': 'drt_mmsc_misc_00030.pcap'}
frameworkTestDriver: evalSetVariable:  	key is:  PCAP_FILE_LOCATION
frameworkTestDriver: evalSetVariable:  	dict now is  /tmp/
frameworkTestDriver: evalSetVariable:  YAML_PCAP_LOCATION : value is:  /tmp/
frameworkTestDriver: printYAMLTestValidations:  order:  1
frameworkTestDriver: printYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_send_req.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}]}
frameworkTestDriver: printYAMLTestValidations:  	pass criteria: {'CONTINUE_ON_FAIL': 'yes', 'MANDATORY': 'yes', 'MISSING_PACKET_OK': 'yes', 'ON_FAIL_SKIP_TO': 3}
frameworkTestDriver: printYAMLTestValidations:  order:  2
frameworkTestDriver: printYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_send_conf.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_SEND_REQ', 'MATCH': 'greater'}}
frameworkTestDriver: printYAMLTestValidations:  	pass criteria: {'ON_FAIL_SKIP_TO': 3}
frameworkTestDriver: printYAMLTestValidations:  order:  3
frameworkTestDriver: printYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_diameter_udr.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_SEND_REQ', 'MATCH': 'greater'}}
frameworkTestDriver: printYAMLTestValidations:  	pass criteria: {'ON_FAIL_SKIP_TO': 5}
frameworkTestDriver: printYAMLTestValidations:  order:  4
frameworkTestDriver: printYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_diameter_uda.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_DIAMETER_UDR', 'MATCH': 'greater'}}
frameworkTestDriver: printYAMLTestValidations:  	pass criteria: {'ON_FAIL_SKIP_TO': 5}
frameworkTestDriver: printYAMLTestValidations:  order:  5
frameworkTestDriver: printYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_notification_ind.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}, {'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:SMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_SEND_CONF', 'MATCH': 'greater'}}
frameworkTestDriver: printYAMLTestValidations:  	pass criteria: {'ON_FAIL_SKIP_TO': 6}
frameworkTestDriver: printYAMLTestValidations:  order:  6
frameworkTestDriver: printYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_notifyresp_ind.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_NOTIFICATION_IND', 'MATCH': 'greater'}}
frameworkTestDriver: printYAMLTestValidations:  	pass criteria: {'ON_FAIL_SKIP_TO': 7}
frameworkTestDriver: printYAMLTestValidations:  order:  7
frameworkTestDriver: printYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_retrieve_conf.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_NOTIFICATION_IND', 'MATCH': 'greater'}}
frameworkTestDriver: printYAMLTestValidations:  	pass criteria: {'ON_FAIL_SKIP_TO': 8}
frameworkTestDriver: printYAMLTestValidations:  order:  8
frameworkTestDriver: printYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_delivery_ind.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}, {'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:SMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_NOTIFICATION_IND', 'MATCH': 'greater'}}
frameworkTestDriver: printYAMLTestValidations:  	pass criteria: {'ON_FAIL_SKIP_TO': 9}
frameworkTestDriver: printYAMLTestValidations:  order:  9
frameworkTestDriver: printYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_readrec_ind.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_DELIVERY_IND', 'MATCH': 'greater'}}
frameworkTestDriver: printYAMLTestValidations:  	pass criteria: {'ON_FAIL_SKIP_TO': 10}
 MSISDN A current dict:  12010500100
 MSISDN A context dict:  12010500100
The context dict is:  {'READ_PCAP': {'OPEN_PCAP_WITH_FILTER': 'mmse or http or diameter.cmd.code==306'}, 'VARIABLES': {'YAML_PCAP_LOCATION': '/tmp/', 'YAML_PCAP_FILE': 'drt_mmsc_misc_00030.pcap', 'YAML_MSISDN_B': '12010500082', 'YAML_MSISDN_A': '12010500100', 'YAML_IMSI_A': '310310990010060', 'YAML_IMSI_B': '310310990010042'}, 'VALIDATIONS': {}, 'YAML_FILE_INPUTS': [{'FILE_NAME': 'ngn_global_variables.yaml', 'NAME_SPACE': 'NGN'}, {'FILE_NAME': 'drt_mmsc_misc_00030_tcvariables.yaml', 'NAME_SPACE': 'TC00030'}], 'TEST_VALIDATIONS': [{'CONFIG': {'FILE_NAME': 'yaml/mmsc/validation_m_send_req.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}]}, 'PASS_CRITERIA': {'CONTINUE_ON_FAIL': 'yes', 'MANDATORY': 'yes', 'MISSING_PACKET_OK': 'yes', 'ON_FAIL_SKIP_TO': 3}, 'ORDER': 1, 'DESC': 'M-SEND-REQ from Load Balancer to MMSC'}, {'CONFIG': {'FILE_NAME': 'yaml/mmsc/validation_m_send_conf.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_SEND_REQ', 'MATCH': 'greater'}}, 'PASS_CRITERIA': {'ON_FAIL_SKIP_TO': 3}, 'ORDER': 2, 'DESC': 'M-SEND-CONF from MMSC to Load Balancer'}, {'CONFIG': {'FILE_NAME': 'yaml/mmsc/validation_diameter_udr.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_SEND_REQ', 'MATCH': 'greater'}}, 'PASS_CRITERIA': {'ON_FAIL_SKIP_TO': 5}, 'ORDER': 3, 'DESC': 'Diameter User Data Request from MMSC to IN'}, {'CONFIG': {'FILE_NAME': 'yaml/mmsc/validation_diameter_uda.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_DIAMETER_UDR', 'MATCH': 'greater'}}, 'PASS_CRITERIA': {'ON_FAIL_SKIP_TO': 5}, 'ORDER': 4, 'DESC': 'Diameter User Data Answer from IN to MMSC'}, {'CONFIG': {'FILE_NAME': 'yaml/mmsc/validation_m_notification_ind.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}, {'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:SMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_SEND_CONF', 'MATCH': 'greater'}}, 'PASS_CRITERIA': {'ON_FAIL_SKIP_TO': 6}, 'ORDER': 5, 'DESC': 'M-NOTIFICATION-IND from MMSC to SMSC'}, {'CONFIG': {'FILE_NAME': 'yaml/mmsc/validation_m_notifyresp_ind.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_NOTIFICATION_IND', 'MATCH': 'greater'}}, 'PASS_CRITERIA': {'ON_FAIL_SKIP_TO': 7}, 'ORDER': 6, 'DESC': 'M-NOTIFIYRESP-IND to MMSC'}, {'CONFIG': {'FILE_NAME': 'yaml/mmsc/validation_m_retrieve_conf.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_NOTIFICATION_IND', 'MATCH': 'greater'}}, 'PASS_CRITERIA': {'ON_FAIL_SKIP_TO': 8}, 'ORDER': 7, 'DESC': 'M-RETRIEVE-CONF to MMSC'}, {'CONFIG': {'FILE_NAME': 'yaml/mmsc/validation_m_delivery_ind.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}, {'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:SMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_NOTIFICATION_IND', 'MATCH': 'greater'}}, 'PASS_CRITERIA': {'ON_FAIL_SKIP_TO': 9}, 'ORDER': 8, 'DESC': 'M-DELIVERY-IND to MMSC'}, {'CONFIG': {'FILE_NAME': 'yaml/mmsc/validation_m_readrec_ind.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_DELIVERY_IND', 'MATCH': 'greater'}}, 'PASS_CRITERIA': {'ON_FAIL_SKIP_TO': 10}, 'ORDER': 9, 'DESC': 'M-READ-REC-IND to MMSC'}]}
 IMSI A current dict:  310310990010060
 IMSI A context dict:  310310990010060
 MSISDN B context dict:  12010500082
 IMSI B context dict:  310310990010042
frameworkTestDriver: parseYAMLTestValidations:  order:  1
frameworkTestDriver: parseYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_send_req.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}]}
frameworkTestDriver: parseYAMLTestValidations:  	pass criteria: {'CONTINUE_ON_FAIL': 'yes', 'MANDATORY': 'yes', 'MISSING_PACKET_OK': 'yes', 'ON_FAIL_SKIP_TO': 3}
frameworkTestDriver: parseYAMLTestValidations:  order:  2
frameworkTestDriver: parseYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_send_conf.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_SEND_REQ', 'MATCH': 'greater'}}
frameworkTestDriver: parseYAMLTestValidations:  	pass criteria: {'ON_FAIL_SKIP_TO': 3}
frameworkTestDriver: parseYAMLTestValidations:  order:  3
frameworkTestDriver: parseYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_diameter_udr.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_SEND_REQ', 'MATCH': 'greater'}}
frameworkTestDriver: parseYAMLTestValidations:  	pass criteria: {'ON_FAIL_SKIP_TO': 5}
frameworkTestDriver: parseYAMLTestValidations:  order:  4
frameworkTestDriver: parseYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_diameter_uda.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_DIAMETER_UDR', 'MATCH': 'greater'}}
frameworkTestDriver: parseYAMLTestValidations:  	pass criteria: {'ON_FAIL_SKIP_TO': 5}
frameworkTestDriver: parseYAMLTestValidations:  order:  5
frameworkTestDriver: parseYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_notification_ind.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}, {'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:SMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_SEND_CONF', 'MATCH': 'greater'}}
frameworkTestDriver: parseYAMLTestValidations:  	pass criteria: {'ON_FAIL_SKIP_TO': 6}
frameworkTestDriver: parseYAMLTestValidations:  order:  6
frameworkTestDriver: parseYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_notifyresp_ind.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_NOTIFICATION_IND', 'MATCH': 'greater'}}
frameworkTestDriver: parseYAMLTestValidations:  	pass criteria: {'ON_FAIL_SKIP_TO': 7}
frameworkTestDriver: parseYAMLTestValidations:  order:  7
frameworkTestDriver: parseYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_retrieve_conf.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_NOTIFICATION_IND', 'MATCH': 'greater'}}
frameworkTestDriver: parseYAMLTestValidations:  	pass criteria: {'ON_FAIL_SKIP_TO': 8}
frameworkTestDriver: parseYAMLTestValidations:  order:  8
frameworkTestDriver: parseYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_delivery_ind.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}, {'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:SMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_NOTIFICATION_IND', 'MATCH': 'greater'}}
frameworkTestDriver: parseYAMLTestValidations:  	pass criteria: {'ON_FAIL_SKIP_TO': 9}
frameworkTestDriver: parseYAMLTestValidations:  order:  9
frameworkTestDriver: parseYAMLTestValidations:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_readrec_ind.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_DELIVERY_IND', 'MATCH': 'greater'}}
frameworkTestDriver: parseYAMLTestValidations:  	pass criteria: {'ON_FAIL_SKIP_TO': 10}
VALIDATIONS DICT:  {1: {'VALIDATIONS': [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'REQUEST_METHOD', 'value': 'POST'}, {'key': 'REQUEST_URI', 'value': '/mms/wapenc'}, {'key': 'REQUEST_VERSION', 'value': 'HTTP/1.1'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'MSISDN'}, {'GETVAR': 'YAML_IMSI_A', 'key': 'IMSI'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_SEND_TID', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate MMSE M-SEND-REQ method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_SEND_REQ'}]}}]}, 2: {'VALIDATIONS': [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-send-conf', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'RESPONSE_CODE', 'value': '200'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'mmse', 'HEADER_NAME': 'Message-ID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_MID', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate MMSE M-SEND-CONF method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_SEND_CONF'}]}}, {'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-send-conf2', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'RESPONSE_CODE', 'value': '200'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_MID', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate MMSE M-SEND-CONF2 method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_SEND_CONF2'}]}}]}, 3: {'VALIDATIONS': [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'LAYER': 'diameter', 'HEADER_NAME': 'Command-Code', 'MATCH': 'equals', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 2, 'VALUE': '306'}, {'LAYER': 'diameter', 'HEADER_NAME': 'User-Identity-MSISDN', 'GETVAR': 'YAML_MSISDN_A', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'exists'}]}, 'VALIDATE_PACKET': [{'LAYER': 'diameter', 'TYPE': 'diameter_validation', 'ORDER': 5, 'DICTS': [{'key': 'CMD_CODE', 'value': '306'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'MSISDN'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'diameter', 'HEADER_NAME': 'Session-Id', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_DIAMETER_SESSION_ID', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate diameter UDR', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_DIAMETER_UDR'}]}}]}, 4: {'VALIDATIONS': [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'LAYER': 'diameter', 'HEADER_NAME': 'Command-Code', 'MATCH': 'equals', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 2, 'VALUE': '306'}, {'LAYER': 'diameter', 'HEADER_NAME': 'Session-Id', 'GETVAR': 'PACKET_DIAMETER_SESSION_ID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'exists'}]}, 'VALIDATE_PACKET': [{'LAYER': 'diameter', 'TYPE': 'diameter_validation', 'ORDER': 5, 'DICTS': [{'GETVAR': 'PACKET_DIAMETER_SESSION_ID', 'key': 'SESSION_ID'}, {'key': 'EXPERIMENTAL_RESULT_CODE', 'value': '5106'}]}], 'DESCRIPTION': 'Validate diameter UDA', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_DIAMETER_UDA'}]}}]}, 5: {'VALIDATIONS': [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-notification-ind', 'LAYER': 'mmse', 'METHOD_ID': '130', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'FROM', 'GETVAR': 'PACKET_MSISDN_A', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'exists'}]}, 'VALIDATE_PACKET': [{'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 5, 'DICTS': [{'GETVAR': 'YAML_MSISDN_A', 'key': 'FROM'}]}, {'LAYER': 'smpp', 'TYPE': 'mmse_validation', 'ORDER': 6, 'DICTS': [{'key': 'SMPPBIND', 'value': '2300'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'helper_function': 'mmse_notification'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 7, 'SETVAR': 'PACKET_NUM_MMSE_NOTIFICATION_IND'}]}}]}, 6: {'VALIDATIONS': [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-notifyresp-ind', 'LAYER': 'mmse', 'METHOD_ID': '131', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 4, 'DICTS': [{'key': 'REQUEST_METHOD', 'value': 'POST'}, {'key': 'REQUEST_URI', 'value': '/mms/wapenc'}, {'key': 'REQUEST_VERSION', 'value': 'HTTP/1.1'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'MSISDN'}]}, {'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 5, 'DICTS': [{'key': 'MESSAGE_TYPE', 'value': '131'}, {'GETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'key': 'TRANSACTION_ID'}, {'key': 'STATUS', 'value': '129'}]}], 'DESCRIPTION': 'Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_NOTIFYRESP_IND'}]}}]}, 7: {'VALIDATIONS': [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-retrieve-conf', 'LAYER': 'mmse', 'METHOD_ID': '132', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'RESPONSE_CODE', 'value': '200'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}]}, {'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 6, 'DICTS': [{'key': 'MESSAGE_TYPE', 'value': '132'}, {'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'TO'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'FROM'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'http', 'HEADER_NAME': 'REQUEST_IN', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_HTTP_REQUEST_IN_FRAME', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_RETRIEVE_CONF_200OK'}]}}, {'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'GETVAR': 'PACKET_HTTP_REQUEST_IN_FRAME', 'ADVANCE_PARAMS': None, 'TYPE': 'parse_header', 'ORDER': 2, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 3, 'DICTS': [{'key': 'REQUEST_METHOD', 'value': 'GET'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'MSISDN'}]}], 'DESCRIPTION': 'Validate MMSE M-RETRIEVE-CONF GET method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 4, 'SETVAR': 'PACKET_NUM_MMSE_RETRIEVE_CONF_GET'}]}}]}, 8: {'VALIDATIONS': [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-delivery-ind', 'LAYER': 'mmse', 'METHOD_ID': '134', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 4, 'DICTS': [{'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'TO'}]}, {'LAYER': 'smpp', 'TYPE': 'mmse_validation', 'ORDER': 5, 'DICTS': [{'GETVAR': 'YAML_MSISDN_A', 'key': 'SMPPDESTADDR'}, {'key': 'SMPPBIND', 'value': '2300'}]}], 'DESCRIPTION': 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_DELIVERY_IND'}]}}]}, 9: {'VALIDATIONS': [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 4, 'DICTS': [{'key': 'MESSAGE_TYPE', 'value': '135'}, {'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'TO'}, {'key': 'READ_STATUS', 'value': '128'}]}], 'DESCRIPTION': 'Validate MMSE M-READ-REC-IND method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 5, 'SETVAR': 'PACKET_NUM_MMSE_READREC_IND'}]}}]}}
 PCAP FILE NAME:  drt_mmsc_misc_00030.pcap
 PCAP LOCATION:  /tmp/
 PCAP DISPLAY FILTER:  mmse or http or diameter.cmd.code==306
frameworkTestDriver: startYAMLTestValidation:  order:  1
frameworkTestDriver: startYAMLTestValidation:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_send_req.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}]}
frameworkTestDriver: startYAMLTestValidation:  	pass criteria: {'CONTINUE_ON_FAIL': 'yes', 'MANDATORY': 'yes', 'MISSING_PACKET_OK': 'yes', 'ON_FAIL_SKIP_TO': 3}
frameworkTestDriver: startYAMLTestValidation:  	config variables: [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}]
frameworkTestDriver: startYAMLTestValidation:  	config variables:  {'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}
frameworkTestDriver: evalSetVariable:  variable:  YAML_IP_DST=$NGN:IPaddress:MMSC
frameworkTestDriver: evalSetVariable:  the var is:  YAML_IP_DST
frameworkTestDriver: evalSetVariable:  key list first elem:  NGN
frameworkTestDriver: evalSetVariable:  	key is:  NGN
frameworkTestDriver: evalSetVariable:  	dict now is  {'IPaddress': {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}}
frameworkTestDriver: evalSetVariable:  	key is:  IPaddress
frameworkTestDriver: evalSetVariable:  	dict now is  {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}
frameworkTestDriver: evalSetVariable:  	key is:  MMSC
frameworkTestDriver: evalSetVariable:  	dict now is  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: evalSetVariable:  YAML_IP_DST : value is:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: startYAMLTestValidation:  PACKET PARSING TO START FROM: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%:  None
frameworkTestDriver: startYAMLTestValidationPerFile:  ALL VALIDATION IN GIVEN YAML FILE:  [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'REQUEST_METHOD', 'value': 'POST'}, {'key': 'REQUEST_URI', 'value': '/mms/wapenc'}, {'key': 'REQUEST_VERSION', 'value': 'HTTP/1.1'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'MSISDN'}, {'GETVAR': 'YAML_IMSI_A', 'key': 'IMSI'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_SEND_TID', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate MMSE M-SEND-REQ method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_SEND_REQ'}]}}]
frameworkTestDriver: startYAMLTestValidationPerFile:  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$VALIDATION PER FILE PER KEY IS:  {'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'REQUEST_METHOD', 'value': 'POST'}, {'key': 'REQUEST_URI', 'value': '/mms/wapenc'}, {'key': 'REQUEST_VERSION', 'value': 'HTTP/1.1'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'MSISDN'}, {'GETVAR': 'YAML_IMSI_A', 'key': 'IMSI'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_SEND_TID', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate MMSE M-SEND-REQ method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_SEND_REQ'}]}}
*****************************************************************


frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  178  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  179  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  180  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  181  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  182  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  183  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  184  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  185  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  186  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  187  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  188  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  189  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.150
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  231  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.84
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  232  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  251 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  251
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  251 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  251  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.69.81
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  252  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  253 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  253
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  253 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  253  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.92
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  262  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.92
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  263  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.90
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.168.210.90  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  313 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  313
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  313 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-send-req  MATCH NOT FOUND
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  313  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  315 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  315
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  315 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-send-req  MATCH NOT FOUND
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  315  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.88
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  316  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.92
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  317  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.92
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  318  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.92
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  319  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  920 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  920
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  920 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  920  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.69.81
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  922  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  925 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  925
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  925 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  925  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.79.132
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  1004  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.79.132
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  1005  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  1848 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  1848
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  1848 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  1848  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.69.81
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  1851  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  1853 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  1853
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  1853 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  1853  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.83
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  1922  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.83
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  1923  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.90
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.168.210.90  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  2214 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  2214
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  2214 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-send-req  MATCH NOT FOUND
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  2214  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  2216 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  2216
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  2216 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-send-req  MATCH NOT FOUND
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  2216  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.88
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  2218  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.79.132
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  2219  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.79.132
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  2220  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.79.132
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  2221  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.90
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.168.210.90  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  2576 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  2576
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  2576 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-send-req  MATCH NOT FOUND
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  2576  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  2578 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  2578
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  2578 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-send-req  MATCH NOT FOUND
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  2578  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.88
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  2579  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.83
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  2580  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.83
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  2581  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.83
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  2582  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  5067  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  5068  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  5069  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  5070  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  5071  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  5072  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  5073  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  5074  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  5075  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  5076  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  5399  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  5400  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  5402  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  5403  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.90
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.168.210.90  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  12330 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  12330
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  12330 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-send-req  MATCH FOUND
frameworkTestDriver: doProtocolCheck:  frame number is:  12330 result:  1
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
http_message_validation: getMSISDN: val:  15157792708
frameworkTestDriver: doProtocolCheck:  MATCH VALUE IS:  exists
frameworkTestDriver: doProtocolCheck:  HEADER GETVAR IS:  YAML_MSISDN_A  HEADER GET VALUE IS:  12010500100
frameworkTestDriver: doProtocolCheck:  HEADER NAME:  MSISDN  NOT MATCHED:  15157792708
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  12330  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  12333 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  12333
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  12333 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-send-req  MATCH FOUND
frameworkTestDriver: doProtocolCheck:  frame number is:  12333 result:  1
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
http_message_validation: getMSISDN: val:  15157792708
frameworkTestDriver: doProtocolCheck:  MATCH VALUE IS:  exists
frameworkTestDriver: doProtocolCheck:  HEADER GETVAR IS:  YAML_MSISDN_A  HEADER GET VALUE IS:  12010500100
frameworkTestDriver: doProtocolCheck:  HEADER NAME:  MSISDN  NOT MATCHED:  15157792708
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  12333  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.149
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12336  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  12340 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  12340
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  12340 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  12340  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.152
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12341  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.139
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.139  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  12343 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  12343
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  12343 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  12343  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.152
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12345  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.139
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.139  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  12347 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  12347
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  12347 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  12347  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.152
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12348  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.69.81
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12350  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.139
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.139  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  12351 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  12351
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  12351 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  12351  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.69.81
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12353  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  12355 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  12355
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  12355 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  12355  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  12356 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  12356
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  12356 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  12356  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.88
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12357  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.85
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12358  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.85
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12359  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.85
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12361  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.152
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12362  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.139
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.139  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  12363 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  12363
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  12363 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  12363  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12365  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.92
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12366  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.85
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12368  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12601  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12602  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12603  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12604  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12605  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12606  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12608  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12609  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12610  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12611  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12612  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  12613  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  19525 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  19525
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  19525 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  19525  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.69.81
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  19527  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  19529 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  19529
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  19529 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  19529  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.83
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  19550  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.83
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  19551  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20148  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20149  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20151  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20152  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20153  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20154  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20155  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20156  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20157  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20158  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20159  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20160  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.90
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.168.210.90  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  20186 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  20186
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  20186 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-send-req  MATCH NOT FOUND
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  20186  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  20188 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  20188
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  20188 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-send-req  MATCH NOT FOUND
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  20188  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.88
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20190  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.83
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20191  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.83
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20192  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.73.83
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20193  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20474  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20475  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20476  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  20477  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.150
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  21273  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.84
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  21276  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.90
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.168.210.90  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26489 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26489
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26489 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-req', 'LAYER': 'mmse', 'METHOD_ID': '128', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-send-req  MATCH FOUND
frameworkTestDriver: doProtocolCheck:  frame number is:  26489 result:  1
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'http', 'HEADER_NAME': 'MSISDN', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'is_payload_xml': 'false', 'use_tshark': 'false', 'decode_hex_to_ascii': 'false'}, 'ORDER': 3, 'GETVAR': 'YAML_MSISDN_A', 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MSISDN_A', 'MATCH': 'exists'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
http_message_validation: getMSISDN: val:  12010500100
frameworkTestDriver: doProtocolCheck:  MATCH VALUE IS:  exists
frameworkTestDriver: doProtocolCheck:  HEADER GETVAR IS:  YAML_MSISDN_A  HEADER GET VALUE IS:  12010500100
frameworkTestDriver: doProtocolCheck:  HEADER NAME:  MSISDN  MATCHED:  12010500100
frameworkTestDriver: doProtocolCheck:  result:  2  matched with result_max:  2
frameworkTestDriver: doProtocolCheck:  frame number is:  26489
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: PASSED, FRAME:  26489 

*****************************************************************


frameworkTestDriver: parsePacket:  PARSE PROTOCOL CHECK:  [{'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_SEND_TID', 'ORDER': 4}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_SEND_TID', 'ORDER': 4}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: parsePacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;PARSE PROTOCOL CHECK: PASSED, FRAME:  26489 

*****************************************************************


frameworkTestDriver: validatePacket:  VALIDATE PACKET DICTIONARY LIST:  [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'REQUEST_METHOD', 'value': 'POST'}, {'key': 'REQUEST_URI', 'value': '/mms/wapenc'}, {'key': 'REQUEST_VERSION', 'value': 'HTTP/1.1'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'MSISDN'}, {'GETVAR': 'YAML_IMSI_A', 'key': 'IMSI'}]}]
frameworkTestDriver: validatePacket:  Validate MMSE M-SEND-REQ method for reqired MSISDN
frameworkTestDriver: validatePacket:  VALIDATE DICT:  {'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'REQUEST_METHOD', 'value': 'POST'}, {'key': 'REQUEST_URI', 'value': '/mms/wapenc'}, {'key': 'REQUEST_VERSION', 'value': 'HTTP/1.1'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'MSISDN'}, {'GETVAR': 'YAML_IMSI_A', 'key': 'IMSI'}]}
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'REQUEST_METHOD', 'value': 'POST'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  REQUEST_METHOD
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  POST
frameworkTestDriver: validatePacket:  PARAM KEY:  REQUEST_METHOD  PARAM VAL:  POST
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'REQUEST_URI', 'value': '/mms/wapenc'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  REQUEST_URI
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  /mms/wapenc
frameworkTestDriver: validatePacket:  PARAM KEY:  REQUEST_URI  PARAM VAL:  /mms/wapenc
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'REQUEST_VERSION', 'value': 'HTTP/1.1'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  REQUEST_VERSION
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  HTTP/1.1
frameworkTestDriver: validatePacket:  PARAM KEY:  REQUEST_VERSION  PARAM VAL:  HTTP/1.1
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  CONTENT_TYPE
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  application/vnd.wap.mms-message
frameworkTestDriver: validatePacket:  PARAM KEY:  CONTENT_TYPE  PARAM VAL:  application/vnd.wap.mms-message
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'GETVAR': 'YAML_MSISDN_A', 'key': 'MSISDN'}
frameworkTestDriver: validatePacket:  KEY IS:  GETVAR  DICT ELEM KEY IS:  YAML_MSISDN_A
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  MSISDN
frameworkTestDriver: validatePacket:  PARAM KEY:  MSISDN  PARAM VAL:  12010500100
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'GETVAR': 'YAML_IMSI_A', 'key': 'IMSI'}
frameworkTestDriver: validatePacket:  KEY IS:  GETVAR  DICT ELEM KEY IS:  YAML_IMSI_A
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  IMSI
frameworkTestDriver: validatePacket:  PARAM KEY:  IMSI  PARAM VAL:  310310990010060
frameworkTestDriver: validatePacket:  ORDERED VALIDATE PARAM DICT:  OrderedDict([('REQUEST_METHOD', 'POST'), ('REQUEST_URI', '/mms/wapenc'), ('REQUEST_VERSION', 'HTTP/1.1'), ('CONTENT_TYPE', 'application/vnd.wap.mms-message'), ('MSISDN', '12010500100'), ('IMSI', '310310990010060')])
http_message_validation: validateHTTPMessage: actual_value POST
http_message_validation: validateHTTPMessage: print_value 	Expected: REQUEST_METHOD- POST		Actual: REQUEST_METHOD- POST
http_message_validation: validateHTTPMessage: actual_value /mms/wapenc
http_message_validation: validateHTTPMessage: print_value 	Expected: REQUEST_URI- /mms/wapenc		Actual: REQUEST_URI- /mms/wapenc
http_message_validation: validateHTTPMessage: actual_value application/vnd.wap.mms-message
http_message_validation: validateHTTPMessage: print_value 	Expected: CONTENT_TYPE- application/vnd.wap.mms-message		Actual: CONTENT_TYPE- application/vnd.wap.mms-message
http_message_validation: getMSISDN: val:  12010500100
http_message_validation: validateHTTPMessage: actual_value 12010500100
http_message_validation: validateHTTPMessage: print_value 	Expected: MSISDN- 12010500100		Actual: MSISDN- 12010500100
http_message_validation: getIMSI: val:  310310990010060
http_message_validation: validateHTTPMessage: actual_value 310310990010060
http_message_validation: validateHTTPMessage: print_value 	Expected: IMSI- 310310990010060		Actual: IMSI- 310310990010060
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: validatePacket:  VALIDATE PACKET RESULT:  ['Validate MMSE M-SEND-REQ method for reqired MSISDN']
frameworkTestDriver: validatePacket:  VALIDATE PACKET MESSAGE:  ['&lt;b style="color:green"&gt;Validate MMSE M-SEND-REQ method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: IMSI- 310310990010060\t\tActual: IMSI- 310310990010060 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n']
frameworkTestDriver: validatePacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;VALIDATE PACKET CHECK: PASSED, FRAME:  26489 

*****************************************************************


frameworkTestDriver: postValidation:  POST_VALIDATION PROTOCOL CHECK:  [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_SEND_REQ'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_SEND_REQ'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: postValidation:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;POST_VALIDATION PROTOCOL CHECK: PASSED, FRAME:  26489 

frameworkTestDriver: startYAMLTestValidation:  order:  2
frameworkTestDriver: startYAMLTestValidation:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_send_conf.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_SEND_REQ', 'MATCH': 'greater'}}
frameworkTestDriver: startYAMLTestValidation:  	pass criteria: {'ON_FAIL_SKIP_TO': 3}
frameworkTestDriver: startYAMLTestValidation:  	config variables: [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}]
frameworkTestDriver: startYAMLTestValidation:  	config variables:  {'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}
frameworkTestDriver: evalSetVariable:  variable:  YAML_IP_SRC=$NGN:IPaddress:MMSC
frameworkTestDriver: evalSetVariable:  the var is:  YAML_IP_SRC
frameworkTestDriver: evalSetVariable:  key list first elem:  NGN
frameworkTestDriver: evalSetVariable:  	key is:  NGN
frameworkTestDriver: evalSetVariable:  	dict now is  {'IPaddress': {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}}
frameworkTestDriver: evalSetVariable:  	key is:  IPaddress
frameworkTestDriver: evalSetVariable:  	dict now is  {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}
frameworkTestDriver: evalSetVariable:  	key is:  MMSC
frameworkTestDriver: evalSetVariable:  	dict now is  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: evalSetVariable:  YAML_IP_SRC : value is:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: startYAMLTestValidation:  PACKET PARSING TO START FROM: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%:  26489
frameworkTestDriver: startYAMLTestValidationPerFile:  ALL VALIDATION IN GIVEN YAML FILE:  [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-send-conf', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'RESPONSE_CODE', 'value': '200'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'mmse', 'HEADER_NAME': 'Message-ID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_MID', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate MMSE M-SEND-CONF method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_SEND_CONF'}]}}, {'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-send-conf2', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'RESPONSE_CODE', 'value': '200'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_MID', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate MMSE M-SEND-CONF2 method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_SEND_CONF2'}]}}]
frameworkTestDriver: startYAMLTestValidationPerFile:  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$VALIDATION PER FILE PER KEY IS:  {'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-send-conf', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'RESPONSE_CODE', 'value': '200'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'mmse', 'HEADER_NAME': 'Message-ID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_MID', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate MMSE M-SEND-CONF method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_SEND_CONF'}]}}
*****************************************************************


frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.88
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26490  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26502 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26502
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26502 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-conf', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-conf', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  26502  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.149
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26506  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.139
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.139  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26508 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26508
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26508 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-conf', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-conf', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  26508  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.152
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26510  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.139
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.139  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26511 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26511
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26511 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-conf', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-conf', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  26511  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.152
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26513  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.139
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.139  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26515 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26515
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26515 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-conf', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-conf', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  26515  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.152
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26517  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26518 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26518
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26518 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-conf', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-conf', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  26518  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26520 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26520
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26520 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-conf', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-conf', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  26520  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.69.81
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26522  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.69.81
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26523  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26524 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26524
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26524 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-conf', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-conf', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-send-conf  MATCH FOUND
frameworkTestDriver: doProtocolCheck:  frame number is:  26524 result:  1
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
frameworkTestDriver: doProtocolCheck:  MATCH VALUE IS:  equals
frameworkTestDriver: doProtocolCheck:  HEADER GETVAR IS:  PACKET_MMSE_SEND_TID  HEADER GET VALUE IS:  T1594843bea4
frameworkTestDriver: doProtocolCheck:  HEADER NAME:  X-Mms-Transaction-ID  MATCHED:  T1594843bea4
frameworkTestDriver: doProtocolCheck:  result:  2  matched with result_max:  2
frameworkTestDriver: doProtocolCheck:  frame number is:  26524
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: PASSED, FRAME:  26524 

*****************************************************************


frameworkTestDriver: parsePacket:  PARSE PROTOCOL CHECK:  [{'LAYER': 'mmse', 'HEADER_NAME': 'Message-ID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_MID', 'ORDER': 4}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'mmse', 'HEADER_NAME': 'Message-ID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_MID', 'ORDER': 4}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: parsePacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;PARSE PROTOCOL CHECK: PASSED, FRAME:  26524 

*****************************************************************


frameworkTestDriver: validatePacket:  VALIDATE PACKET DICTIONARY LIST:  [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'RESPONSE_CODE', 'value': '200'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}]}]
frameworkTestDriver: validatePacket:  Validate MMSE M-SEND-CONF method for reqired MSISDN
frameworkTestDriver: validatePacket:  VALIDATE DICT:  {'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'RESPONSE_CODE', 'value': '200'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}]}
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'RESPONSE_CODE', 'value': '200'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  RESPONSE_CODE
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  200
frameworkTestDriver: validatePacket:  PARAM KEY:  RESPONSE_CODE  PARAM VAL:  200
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  CONTENT_TYPE
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  application/vnd.wap.mms-message
frameworkTestDriver: validatePacket:  PARAM KEY:  CONTENT_TYPE  PARAM VAL:  application/vnd.wap.mms-message
frameworkTestDriver: validatePacket:  ORDERED VALIDATE PARAM DICT:  OrderedDict([('RESPONSE_CODE', '200'), ('CONTENT_TYPE', 'application/vnd.wap.mms-message')])
http_message_validation: validateHTTPMessage: actual_value 200
http_message_validation: validateHTTPMessage: print_value 	Expected: RESPONSE_CODE- 200		Actual: RESPONSE_CODE- 200
http_message_validation: validateHTTPMessage: actual_value application/vnd.wap.mms-message
http_message_validation: validateHTTPMessage: print_value 	Expected: CONTENT_TYPE- application/vnd.wap.mms-message		Actual: CONTENT_TYPE- application/vnd.wap.mms-message
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: validatePacket:  VALIDATE PACKET RESULT:  ['Validate MMSE M-SEND-REQ method for reqired MSISDN', 'Validate MMSE M-SEND-CONF method for reqired MSISDN']
frameworkTestDriver: validatePacket:  VALIDATE PACKET MESSAGE:  ['&lt;b style="color:green"&gt;Validate MMSE M-SEND-REQ method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: IMSI- 310310990010060\t\tActual: IMSI- 310310990010060 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n']
frameworkTestDriver: validatePacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;VALIDATE PACKET CHECK: PASSED, FRAME:  26524 

*****************************************************************


frameworkTestDriver: postValidation:  POST_VALIDATION PROTOCOL CHECK:  [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_SEND_CONF'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_SEND_CONF'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: postValidation:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;POST_VALIDATION PROTOCOL CHECK: PASSED, FRAME:  26524 

frameworkTestDriver: startYAMLTestValidationPerFile:  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$VALIDATION PER FILE PER KEY IS:  {'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-send-conf2', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'RESPONSE_CODE', 'value': '200'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_MID', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate MMSE M-SEND-CONF2 method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_SEND_CONF2'}]}}
*****************************************************************


frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.88
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26490  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26502 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26502
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26502 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-conf2', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-conf2', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  26502  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.149
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26506  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.139
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.139  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26508 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26508
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26508 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-conf2', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-conf2', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  26508  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.152
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26510  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.139
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.139  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26511 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26511
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26511 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-conf2', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-conf2', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  26511  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.152
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26513  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.139
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.139  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26515 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26515
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26515 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-conf2', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-conf2', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  26515  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.152
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26517  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26518 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26518
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26518 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-conf2', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-conf2', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  26518  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26520 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26520
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26520 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-conf2', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-conf2', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  26520  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.69.81
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26522  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.69.81
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26523  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26524 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26524
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26524 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-send-conf2', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-send-conf2', 'LAYER': 'mmse', 'METHOD_ID': '129', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-send-conf2  MATCH FOUND
frameworkTestDriver: doProtocolCheck:  frame number is:  26524 result:  1
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_SEND_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
frameworkTestDriver: doProtocolCheck:  MATCH VALUE IS:  equals
frameworkTestDriver: doProtocolCheck:  HEADER GETVAR IS:  PACKET_MMSE_SEND_TID  HEADER GET VALUE IS:  T1594843bea4
frameworkTestDriver: doProtocolCheck:  HEADER NAME:  X-Mms-Transaction-ID  MATCHED:  T1594843bea4
frameworkTestDriver: doProtocolCheck:  result:  2  matched with result_max:  2
frameworkTestDriver: doProtocolCheck:  frame number is:  26524
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: PASSED, FRAME:  26524 

*****************************************************************


frameworkTestDriver: parsePacket:  PARSE PROTOCOL CHECK:  [{'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_MID', 'ORDER': 4}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_MID', 'ORDER': 4}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: parsePacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;PARSE PROTOCOL CHECK: PASSED, FRAME:  26524 

*****************************************************************


frameworkTestDriver: validatePacket:  VALIDATE PACKET DICTIONARY LIST:  [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'RESPONSE_CODE', 'value': '200'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}]}]
frameworkTestDriver: validatePacket:  Validate MMSE M-SEND-CONF2 method for reqired MSISDN
frameworkTestDriver: validatePacket:  VALIDATE DICT:  {'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'RESPONSE_CODE', 'value': '200'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}]}
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'RESPONSE_CODE', 'value': '200'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  RESPONSE_CODE
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  200
frameworkTestDriver: validatePacket:  PARAM KEY:  RESPONSE_CODE  PARAM VAL:  200
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  CONTENT_TYPE
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  application/vnd.wap.mms-message
frameworkTestDriver: validatePacket:  PARAM KEY:  CONTENT_TYPE  PARAM VAL:  application/vnd.wap.mms-message
frameworkTestDriver: validatePacket:  ORDERED VALIDATE PARAM DICT:  OrderedDict([('RESPONSE_CODE', '200'), ('CONTENT_TYPE', 'application/vnd.wap.mms-message')])
http_message_validation: validateHTTPMessage: actual_value 200
http_message_validation: validateHTTPMessage: print_value 	Expected: RESPONSE_CODE- 200		Actual: RESPONSE_CODE- 200
http_message_validation: validateHTTPMessage: actual_value application/vnd.wap.mms-message
http_message_validation: validateHTTPMessage: print_value 	Expected: CONTENT_TYPE- application/vnd.wap.mms-message		Actual: CONTENT_TYPE- application/vnd.wap.mms-message
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: validatePacket:  VALIDATE PACKET RESULT:  ['Validate MMSE M-SEND-REQ method for reqired MSISDN', 'Validate MMSE M-SEND-CONF method for reqired MSISDN', 'Validate MMSE M-SEND-CONF2 method for reqired MSISDN']
frameworkTestDriver: validatePacket:  VALIDATE PACKET MESSAGE:  ['&lt;b style="color:green"&gt;Validate MMSE M-SEND-REQ method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: IMSI- 310310990010060\t\tActual: IMSI- 310310990010060 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF2 method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n']
frameworkTestDriver: validatePacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;VALIDATE PACKET CHECK: PASSED, FRAME:  26524 

*****************************************************************


frameworkTestDriver: postValidation:  POST_VALIDATION PROTOCOL CHECK:  [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_SEND_CONF2'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_SEND_CONF2'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: postValidation:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;POST_VALIDATION PROTOCOL CHECK: PASSED, FRAME:  26524 

frameworkTestDriver: startYAMLTestValidation:  order:  3
frameworkTestDriver: startYAMLTestValidation:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_diameter_udr.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_SEND_REQ', 'MATCH': 'greater'}}
frameworkTestDriver: startYAMLTestValidation:  	pass criteria: {'ON_FAIL_SKIP_TO': 5}
frameworkTestDriver: startYAMLTestValidation:  	config variables: [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}]
frameworkTestDriver: startYAMLTestValidation:  	config variables:  {'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}
frameworkTestDriver: evalSetVariable:  variable:  YAML_IP_SRC=$NGN:IPaddress:MMSC
frameworkTestDriver: evalSetVariable:  the var is:  YAML_IP_SRC
frameworkTestDriver: evalSetVariable:  key list first elem:  NGN
frameworkTestDriver: evalSetVariable:  	key is:  NGN
frameworkTestDriver: evalSetVariable:  	dict now is  {'IPaddress': {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}}
frameworkTestDriver: evalSetVariable:  	key is:  IPaddress
frameworkTestDriver: evalSetVariable:  	dict now is  {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}
frameworkTestDriver: evalSetVariable:  	key is:  MMSC
frameworkTestDriver: evalSetVariable:  	dict now is  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: evalSetVariable:  YAML_IP_SRC : value is:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: startYAMLTestValidation:  PACKET PARSING TO START FROM: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%:  26489
frameworkTestDriver: startYAMLTestValidationPerFile:  ALL VALIDATION IN GIVEN YAML FILE:  [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'LAYER': 'diameter', 'HEADER_NAME': 'Command-Code', 'MATCH': 'equals', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 2, 'VALUE': '306'}, {'LAYER': 'diameter', 'HEADER_NAME': 'User-Identity-MSISDN', 'GETVAR': 'YAML_MSISDN_A', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'exists'}]}, 'VALIDATE_PACKET': [{'LAYER': 'diameter', 'TYPE': 'diameter_validation', 'ORDER': 5, 'DICTS': [{'key': 'CMD_CODE', 'value': '306'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'MSISDN'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'diameter', 'HEADER_NAME': 'Session-Id', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_DIAMETER_SESSION_ID', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate diameter UDR', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_DIAMETER_UDR'}]}}]
frameworkTestDriver: startYAMLTestValidationPerFile:  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$VALIDATION PER FILE PER KEY IS:  {'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'LAYER': 'diameter', 'HEADER_NAME': 'Command-Code', 'MATCH': 'equals', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 2, 'VALUE': '306'}, {'LAYER': 'diameter', 'HEADER_NAME': 'User-Identity-MSISDN', 'GETVAR': 'YAML_MSISDN_A', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'exists'}]}, 'VALIDATE_PACKET': [{'LAYER': 'diameter', 'TYPE': 'diameter_validation', 'ORDER': 5, 'DICTS': [{'key': 'CMD_CODE', 'value': '306'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'MSISDN'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'diameter', 'HEADER_NAME': 'Session-Id', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_DIAMETER_SESSION_ID', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate diameter UDR', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_DIAMETER_UDR'}]}}
*****************************************************************


frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.88
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26490  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26502 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26502
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26502 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'LAYER': 'diameter', 'HEADER_NAME': 'Command-Code', 'MATCH': 'equals', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 2, 'VALUE': '306'}, {'LAYER': 'diameter', 'HEADER_NAME': 'User-Identity-MSISDN', 'GETVAR': 'YAML_MSISDN_A', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'diameter', 'HEADER_NAME': 'Command-Code', 'MATCH': 'equals', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 2, 'VALUE': '306'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  26502  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.149
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26506  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.139
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.139  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26508 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26508
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26508 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'LAYER': 'diameter', 'HEADER_NAME': 'Command-Code', 'MATCH': 'equals', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 2, 'VALUE': '306'}, {'LAYER': 'diameter', 'HEADER_NAME': 'User-Identity-MSISDN', 'GETVAR': 'YAML_MSISDN_A', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'diameter', 'HEADER_NAME': 'Command-Code', 'MATCH': 'equals', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 2, 'VALUE': '306'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
frameworkTestDriver: doProtocolCheck:  MATCH VALUE IS:  equals
frameworkTestDriver: doProtocolCheck:  HEADER VALUE IS:  306
frameworkTestDriver: doProtocolCheck:  HEADER NAME:  Command-Code  MATCHED:  306
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'diameter', 'HEADER_NAME': 'User-Identity-MSISDN', 'GETVAR': 'YAML_MSISDN_A', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'exists'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
frameworkTestDriver: doProtocolCheck:  MATCH VALUE IS:  exists
frameworkTestDriver: doProtocolCheck:  HEADER GETVAR IS:  YAML_MSISDN_A  HEADER GET VALUE IS:  12010500100
frameworkTestDriver: doProtocolCheck:  HEADER NAME:  User-Identity-MSISDN  MATCHED:  12010500100
frameworkTestDriver: doProtocolCheck:  result:  2  matched with result_max:  2
frameworkTestDriver: doProtocolCheck:  frame number is:  26508
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: PASSED, FRAME:  26508 

*****************************************************************


frameworkTestDriver: parsePacket:  PARSE PROTOCOL CHECK:  [{'LAYER': 'diameter', 'HEADER_NAME': 'Session-Id', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_DIAMETER_SESSION_ID', 'ORDER': 4}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'diameter', 'HEADER_NAME': 'Session-Id', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_DIAMETER_SESSION_ID', 'ORDER': 4}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: parsePacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;PARSE PROTOCOL CHECK: PASSED, FRAME:  26508 

*****************************************************************


frameworkTestDriver: validatePacket:  VALIDATE PACKET DICTIONARY LIST:  [{'LAYER': 'diameter', 'TYPE': 'diameter_validation', 'ORDER': 5, 'DICTS': [{'key': 'CMD_CODE', 'value': '306'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'MSISDN'}]}]
frameworkTestDriver: validatePacket:  Validate diameter UDR
frameworkTestDriver: validatePacket:  VALIDATE DICT:  {'LAYER': 'diameter', 'TYPE': 'diameter_validation', 'ORDER': 5, 'DICTS': [{'key': 'CMD_CODE', 'value': '306'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'MSISDN'}]}
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'CMD_CODE', 'value': '306'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  CMD_CODE
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  306
frameworkTestDriver: validatePacket:  PARAM KEY:  CMD_CODE  PARAM VAL:  306
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'GETVAR': 'YAML_MSISDN_A', 'key': 'MSISDN'}
frameworkTestDriver: validatePacket:  KEY IS:  GETVAR  DICT ELEM KEY IS:  YAML_MSISDN_A
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  MSISDN
frameworkTestDriver: validatePacket:  PARAM KEY:  MSISDN  PARAM VAL:  12010500100
frameworkTestDriver: validatePacket:  ORDERED VALIDATE PARAM DICT:  OrderedDict([('CMD_CODE', '306'), ('MSISDN', '12010500100')])
diameter_message_validation: validateDiameterMessage: Checking for:  CMD_CODE
diameter_message_validation: validateDiameterMessage: actual_value 306
diameter_message_validation: validateDiameterMessage: print_value 	Expected: CMD_CODE- 306		Actual: CMD_CODE- 306
diameter_message_validation: validateDiameterMessage: Checking for:  MSISDN
diameter_message_validation: validateDiameterMessage: actual_value 12010500100
diameter_message_validation: validateDiameterMessage: print_value 	Expected: MSISDN- 12010500100		Actual: MSISDN- 12010500100
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: validatePacket:  VALIDATE PACKET RESULT:  ['Validate MMSE M-SEND-REQ method for reqired MSISDN', 'Validate MMSE M-SEND-CONF method for reqired MSISDN', 'Validate MMSE M-SEND-CONF2 method for reqired MSISDN', 'Validate diameter UDR']
frameworkTestDriver: validatePacket:  VALIDATE PACKET MESSAGE:  ['&lt;b style="color:green"&gt;Validate MMSE M-SEND-REQ method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: IMSI- 310310990010060\t\tActual: IMSI- 310310990010060 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF2 method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate diameter UDR&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: CMD_CODE- 306\t\tActual: CMD_CODE- 306 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n']
frameworkTestDriver: validatePacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;VALIDATE PACKET CHECK: PASSED, FRAME:  26508 

*****************************************************************


frameworkTestDriver: postValidation:  POST_VALIDATION PROTOCOL CHECK:  [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_DIAMETER_UDR'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_DIAMETER_UDR'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: postValidation:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;POST_VALIDATION PROTOCOL CHECK: PASSED, FRAME:  26508 

frameworkTestDriver: startYAMLTestValidation:  order:  4
frameworkTestDriver: startYAMLTestValidation:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_diameter_uda.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_DIAMETER_UDR', 'MATCH': 'greater'}}
frameworkTestDriver: startYAMLTestValidation:  	pass criteria: {'ON_FAIL_SKIP_TO': 5}
frameworkTestDriver: startYAMLTestValidation:  	config variables: [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}]
frameworkTestDriver: startYAMLTestValidation:  	config variables:  {'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}
frameworkTestDriver: evalSetVariable:  variable:  YAML_IP_DST=$NGN:IPaddress:MMSC
frameworkTestDriver: evalSetVariable:  the var is:  YAML_IP_DST
frameworkTestDriver: evalSetVariable:  key list first elem:  NGN
frameworkTestDriver: evalSetVariable:  	key is:  NGN
frameworkTestDriver: evalSetVariable:  	dict now is  {'IPaddress': {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}}
frameworkTestDriver: evalSetVariable:  	key is:  IPaddress
frameworkTestDriver: evalSetVariable:  	dict now is  {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}
frameworkTestDriver: evalSetVariable:  	key is:  MMSC
frameworkTestDriver: evalSetVariable:  	dict now is  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: evalSetVariable:  YAML_IP_DST : value is:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: startYAMLTestValidation:  PACKET PARSING TO START FROM: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%:  26508
frameworkTestDriver: startYAMLTestValidationPerFile:  ALL VALIDATION IN GIVEN YAML FILE:  [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'LAYER': 'diameter', 'HEADER_NAME': 'Command-Code', 'MATCH': 'equals', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 2, 'VALUE': '306'}, {'LAYER': 'diameter', 'HEADER_NAME': 'Session-Id', 'GETVAR': 'PACKET_DIAMETER_SESSION_ID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'exists'}]}, 'VALIDATE_PACKET': [{'LAYER': 'diameter', 'TYPE': 'diameter_validation', 'ORDER': 5, 'DICTS': [{'GETVAR': 'PACKET_DIAMETER_SESSION_ID', 'key': 'SESSION_ID'}, {'key': 'EXPERIMENTAL_RESULT_CODE', 'value': '5106'}]}], 'DESCRIPTION': 'Validate diameter UDA', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_DIAMETER_UDA'}]}}]
frameworkTestDriver: startYAMLTestValidationPerFile:  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$VALIDATION PER FILE PER KEY IS:  {'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'LAYER': 'diameter', 'HEADER_NAME': 'Command-Code', 'MATCH': 'equals', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 2, 'VALUE': '306'}, {'LAYER': 'diameter', 'HEADER_NAME': 'Session-Id', 'GETVAR': 'PACKET_DIAMETER_SESSION_ID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'exists'}]}, 'VALIDATE_PACKET': [{'LAYER': 'diameter', 'TYPE': 'diameter_validation', 'ORDER': 5, 'DICTS': [{'GETVAR': 'PACKET_DIAMETER_SESSION_ID', 'key': 'SESSION_ID'}, {'key': 'EXPERIMENTAL_RESULT_CODE', 'value': '5106'}]}], 'DESCRIPTION': 'Validate diameter UDA', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_DIAMETER_UDA'}]}}
*****************************************************************


frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.139
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.139  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26510 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26510
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26510 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'LAYER': 'diameter', 'HEADER_NAME': 'Command-Code', 'MATCH': 'equals', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 2, 'VALUE': '306'}, {'LAYER': 'diameter', 'HEADER_NAME': 'Session-Id', 'GETVAR': 'PACKET_DIAMETER_SESSION_ID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'diameter', 'HEADER_NAME': 'Command-Code', 'MATCH': 'equals', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 2, 'VALUE': '306'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
frameworkTestDriver: doProtocolCheck:  MATCH VALUE IS:  equals
frameworkTestDriver: doProtocolCheck:  HEADER VALUE IS:  306
frameworkTestDriver: doProtocolCheck:  HEADER NAME:  Command-Code  MATCHED:  306
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'diameter', 'HEADER_NAME': 'Session-Id', 'GETVAR': 'PACKET_DIAMETER_SESSION_ID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'exists'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
frameworkTestDriver: doProtocolCheck:  MATCH VALUE IS:  exists
frameworkTestDriver: doProtocolCheck:  HEADER GETVAR IS:  PACKET_DIAMETER_SESSION_ID  HEADER GET VALUE IS:  tmormstp2.mavenir.com;230429661;34891
frameworkTestDriver: doProtocolCheck:  HEADER NAME:  Session-Id  MATCHED:  tmormstp2.mavenir.com;230429661;34891
frameworkTestDriver: doProtocolCheck:  result:  2  matched with result_max:  2
frameworkTestDriver: doProtocolCheck:  frame number is:  26510
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: PASSED, FRAME:  26510 

*****************************************************************


*****************************************************************


frameworkTestDriver: validatePacket:  VALIDATE PACKET DICTIONARY LIST:  [{'LAYER': 'diameter', 'TYPE': 'diameter_validation', 'ORDER': 5, 'DICTS': [{'GETVAR': 'PACKET_DIAMETER_SESSION_ID', 'key': 'SESSION_ID'}, {'key': 'EXPERIMENTAL_RESULT_CODE', 'value': '5106'}]}]
frameworkTestDriver: validatePacket:  Validate diameter UDA
frameworkTestDriver: validatePacket:  VALIDATE DICT:  {'LAYER': 'diameter', 'TYPE': 'diameter_validation', 'ORDER': 5, 'DICTS': [{'GETVAR': 'PACKET_DIAMETER_SESSION_ID', 'key': 'SESSION_ID'}, {'key': 'EXPERIMENTAL_RESULT_CODE', 'value': '5106'}]}
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'GETVAR': 'PACKET_DIAMETER_SESSION_ID', 'key': 'SESSION_ID'}
frameworkTestDriver: validatePacket:  KEY IS:  GETVAR  DICT ELEM KEY IS:  PACKET_DIAMETER_SESSION_ID
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  SESSION_ID
frameworkTestDriver: validatePacket:  PARAM KEY:  SESSION_ID  PARAM VAL:  tmormstp2.mavenir.com;230429661;34891
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'EXPERIMENTAL_RESULT_CODE', 'value': '5106'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  EXPERIMENTAL_RESULT_CODE
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  5106
frameworkTestDriver: validatePacket:  PARAM KEY:  EXPERIMENTAL_RESULT_CODE  PARAM VAL:  5106
frameworkTestDriver: validatePacket:  ORDERED VALIDATE PARAM DICT:  OrderedDict([('SESSION_ID', 'tmormstp2.mavenir.com;230429661;34891'), ('EXPERIMENTAL_RESULT_CODE', '5106')])
diameter_message_validation: validateDiameterMessage: Checking for:  SESSION_ID
diameter_message_validation: validateDiameterMessage: actual_value tmormstp2.mavenir.com;230429661;34891
diameter_message_validation: validateDiameterMessage: print_value 	Expected: SESSION_ID- tmormstp2.mavenir.com;230429661;34891		Actual: SESSION_ID- tmormstp2.mavenir.com;230429661;34891
diameter_message_validation: validateDiameterMessage: Checking for:  EXPERIMENTAL_RESULT_CODE
diameter_message_validation: validateDiameterMessage: actual_value 5106
diameter_message_validation: validateDiameterMessage: print_value 	Expected: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT		Actual: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: validatePacket:  VALIDATE PACKET RESULT:  ['Validate MMSE M-SEND-REQ method for reqired MSISDN', 'Validate MMSE M-SEND-CONF method for reqired MSISDN', 'Validate MMSE M-SEND-CONF2 method for reqired MSISDN', 'Validate diameter UDR', 'Validate diameter UDA']
frameworkTestDriver: validatePacket:  VALIDATE PACKET MESSAGE:  ['&lt;b style="color:green"&gt;Validate MMSE M-SEND-REQ method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: IMSI- 310310990010060\t\tActual: IMSI- 310310990010060 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF2 method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate diameter UDR&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: CMD_CODE- 306\t\tActual: CMD_CODE- 306 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate diameter UDA&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: SESSION_ID- tmormstp2.mavenir.com;230429661;34891\t\tActual: SESSION_ID- tmormstp2.mavenir.com;230429661;34891 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT\t\tActual: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n']
frameworkTestDriver: validatePacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;VALIDATE PACKET CHECK: PASSED, FRAME:  26510 

*****************************************************************


frameworkTestDriver: postValidation:  POST_VALIDATION PROTOCOL CHECK:  [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_DIAMETER_UDA'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_DIAMETER_UDA'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: postValidation:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;POST_VALIDATION PROTOCOL CHECK: PASSED, FRAME:  26510 

frameworkTestDriver: startYAMLTestValidation:  order:  5
frameworkTestDriver: startYAMLTestValidation:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_notification_ind.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}, {'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:SMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_SEND_CONF', 'MATCH': 'greater'}}
frameworkTestDriver: startYAMLTestValidation:  	pass criteria: {'ON_FAIL_SKIP_TO': 6}
frameworkTestDriver: startYAMLTestValidation:  	config variables: [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}, {'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:SMSC'}]
frameworkTestDriver: startYAMLTestValidation:  	config variables:  {'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}
frameworkTestDriver: evalSetVariable:  variable:  YAML_IP_SRC=$NGN:IPaddress:MMSC
frameworkTestDriver: evalSetVariable:  the var is:  YAML_IP_SRC
frameworkTestDriver: evalSetVariable:  key list first elem:  NGN
frameworkTestDriver: evalSetVariable:  	key is:  NGN
frameworkTestDriver: evalSetVariable:  	dict now is  {'IPaddress': {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}}
frameworkTestDriver: evalSetVariable:  	key is:  IPaddress
frameworkTestDriver: evalSetVariable:  	dict now is  {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}
frameworkTestDriver: evalSetVariable:  	key is:  MMSC
frameworkTestDriver: evalSetVariable:  	dict now is  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: evalSetVariable:  YAML_IP_SRC : value is:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: startYAMLTestValidation:  	config variables:  {'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:SMSC'}
frameworkTestDriver: evalSetVariable:  variable:  YAML_IP_DST=$NGN:IPaddress:SMSC
frameworkTestDriver: evalSetVariable:  the var is:  YAML_IP_DST
frameworkTestDriver: evalSetVariable:  key list first elem:  NGN
frameworkTestDriver: evalSetVariable:  	key is:  NGN
frameworkTestDriver: evalSetVariable:  	dict now is  {'IPaddress': {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}}
frameworkTestDriver: evalSetVariable:  	key is:  IPaddress
frameworkTestDriver: evalSetVariable:  	dict now is  {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}
frameworkTestDriver: evalSetVariable:  	key is:  SMSC
frameworkTestDriver: evalSetVariable:  	dict now is  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: evalSetVariable:  YAML_IP_DST : value is:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: startYAMLTestValidation:  PACKET PARSING TO START FROM: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%:  26524
frameworkTestDriver: startYAMLTestValidationPerFile:  ALL VALIDATION IN GIVEN YAML FILE:  [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-notification-ind', 'LAYER': 'mmse', 'METHOD_ID': '130', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'FROM', 'GETVAR': 'PACKET_MSISDN_A', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'exists'}]}, 'VALIDATE_PACKET': [{'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 5, 'DICTS': [{'GETVAR': 'YAML_MSISDN_A', 'key': 'FROM'}]}, {'LAYER': 'smpp', 'TYPE': 'mmse_validation', 'ORDER': 6, 'DICTS': [{'key': 'SMPPBIND', 'value': '2300'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'helper_function': 'mmse_notification'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 7, 'SETVAR': 'PACKET_NUM_MMSE_NOTIFICATION_IND'}]}}]
frameworkTestDriver: startYAMLTestValidationPerFile:  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$VALIDATION PER FILE PER KEY IS:  {'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-notification-ind', 'LAYER': 'mmse', 'METHOD_ID': '130', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'FROM', 'GETVAR': 'PACKET_MSISDN_A', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'exists'}]}, 'VALIDATE_PACKET': [{'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 5, 'DICTS': [{'GETVAR': 'YAML_MSISDN_A', 'key': 'FROM'}]}, {'LAYER': 'smpp', 'TYPE': 'mmse_validation', 'ORDER': 6, 'DICTS': [{'key': 'SMPPBIND', 'value': '2300'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'helper_function': 'mmse_notification'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 7, 'SETVAR': 'PACKET_NUM_MMSE_NOTIFICATION_IND'}]}}
*****************************************************************


frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  66.94.13.125
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26525  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  66.94.13.125
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26527  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.152
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26528  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.139
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26529  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.174.68.21  IS FOUND IN:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  frame number is:  26531 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26531
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26531 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-notification-ind', 'LAYER': 'mmse', 'METHOD_ID': '130', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'FROM', 'GETVAR': 'PACKET_MSISDN_A', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-notification-ind', 'LAYER': 'mmse', 'METHOD_ID': '130', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-notification-ind  MATCH FOUND
frameworkTestDriver: doProtocolCheck:  frame number is:  26531 result:  1
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'mmse', 'HEADER_NAME': 'FROM', 'GETVAR': 'PACKET_MSISDN_A', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'exists'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
MMSEMessageValidation: getMMSEFrom:  +12010500100/TYPE=PLMN
frameworkTestDriver: doProtocolCheck:  MATCH VALUE IS:  exists
frameworkTestDriver: doProtocolCheck:  HEADER GETVAR IS:  PACKET_MSISDN_A  HEADER GET VALUE IS:  12010500100
frameworkTestDriver: doProtocolCheck:  HEADER NAME:  FROM  MATCHED:  12010500100
frameworkTestDriver: doProtocolCheck:  result:  2  matched with result_max:  2
frameworkTestDriver: doProtocolCheck:  frame number is:  26531
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: PASSED, FRAME:  26531 

*****************************************************************


frameworkTestDriver: parsePacket:  PARSE PROTOCOL CHECK:  [{'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'helper_function': 'mmse_notification'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'ORDER': 4}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'ADVANCE_PARAMS': {'header_multiple': 'false', 'helper_function': 'mmse_notification'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'ORDER': 4}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: parsePacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;PARSE PROTOCOL CHECK: PASSED, FRAME:  26531 

*****************************************************************


frameworkTestDriver: validatePacket:  VALIDATE PACKET DICTIONARY LIST:  [{'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 5, 'DICTS': [{'GETVAR': 'YAML_MSISDN_A', 'key': 'FROM'}]}, {'LAYER': 'smpp', 'TYPE': 'mmse_validation', 'ORDER': 6, 'DICTS': [{'key': 'SMPPBIND', 'value': '2300'}]}]
frameworkTestDriver: validatePacket:  Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN
frameworkTestDriver: validatePacket:  VALIDATE DICT:  {'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 5, 'DICTS': [{'GETVAR': 'YAML_MSISDN_A', 'key': 'FROM'}]}
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'GETVAR': 'YAML_MSISDN_A', 'key': 'FROM'}
frameworkTestDriver: validatePacket:  KEY IS:  GETVAR  DICT ELEM KEY IS:  YAML_MSISDN_A
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  FROM
frameworkTestDriver: validatePacket:  PARAM KEY:  FROM  PARAM VAL:  12010500100
frameworkTestDriver: validatePacket:  ORDERED VALIDATE PARAM DICT:  OrderedDict([('FROM', '12010500100')])
mmse_message_validation: validateMMSEMessage: Checking for : FROM
MMSEMessageValidation: getMMSEFrom:  +12010500100/TYPE=PLMN
mmse_message_validation: validateMMSEMessage: actual_value 12010500100
mmse_message_validation: validateMMSEMessage: print_value 	Expected: FROM- 12010500100		Actual: FROM- 12010500100
frameworkTestDriver: validatePacket:  VALIDATE DICT:  {'LAYER': 'smpp', 'TYPE': 'mmse_validation', 'ORDER': 6, 'DICTS': [{'key': 'SMPPBIND', 'value': '2300'}]}
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'SMPPBIND', 'value': '2300'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  SMPPBIND
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  2300
frameworkTestDriver: validatePacket:  PARAM KEY:  SMPPBIND  PARAM VAL:  2300
frameworkTestDriver: validatePacket:  ORDERED VALIDATE PARAM DICT:  OrderedDict([('SMPPBIND', '2300')])
mmse_message_validation: validateMMSEMessage: Checking for : SMPPBIND
mmse_message_validation: validateMMSEMessage: actual_value 2300
mmse_message_validation: validateMMSEMessage: print_value 	Expected: SMPPBIND- 2300		Actual: SMPPBIND- 2300
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: validatePacket:  VALIDATE PACKET RESULT:  ['Validate MMSE M-SEND-REQ method for reqired MSISDN', 'Validate MMSE M-SEND-CONF method for reqired MSISDN', 'Validate MMSE M-SEND-CONF2 method for reqired MSISDN', 'Validate diameter UDR', 'Validate diameter UDA', 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN']
frameworkTestDriver: validatePacket:  VALIDATE PACKET MESSAGE:  ['&lt;b style="color:green"&gt;Validate MMSE M-SEND-REQ method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: IMSI- 310310990010060\t\tActual: IMSI- 310310990010060 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF2 method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate diameter UDR&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: CMD_CODE- 306\t\tActual: CMD_CODE- 306 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate diameter UDA&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: SESSION_ID- tmormstp2.mavenir.com;230429661;34891\t\tActual: SESSION_ID- tmormstp2.mavenir.com;230429661;34891 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT\t\tActual: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: FROM- 12010500100\t\tActual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: FROM- 12010500100\t\tActual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: SMPPBIND- 2300\t\tActual: SMPPBIND- 2300 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n']
frameworkTestDriver: validatePacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;VALIDATE PACKET CHECK: PASSED, FRAME:  26531 

*****************************************************************


frameworkTestDriver: postValidation:  POST_VALIDATION PROTOCOL CHECK:  [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 7, 'SETVAR': 'PACKET_NUM_MMSE_NOTIFICATION_IND'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 7, 'SETVAR': 'PACKET_NUM_MMSE_NOTIFICATION_IND'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: postValidation:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;POST_VALIDATION PROTOCOL CHECK: PASSED, FRAME:  26531 

frameworkTestDriver: startYAMLTestValidation:  order:  6
frameworkTestDriver: startYAMLTestValidation:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_notifyresp_ind.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_NOTIFICATION_IND', 'MATCH': 'greater'}}
frameworkTestDriver: startYAMLTestValidation:  	pass criteria: {'ON_FAIL_SKIP_TO': 7}
frameworkTestDriver: startYAMLTestValidation:  	config variables: [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}]
frameworkTestDriver: startYAMLTestValidation:  	config variables:  {'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}
frameworkTestDriver: evalSetVariable:  variable:  YAML_IP_DST=$NGN:IPaddress:MMSC
frameworkTestDriver: evalSetVariable:  the var is:  YAML_IP_DST
frameworkTestDriver: evalSetVariable:  key list first elem:  NGN
frameworkTestDriver: evalSetVariable:  	key is:  NGN
frameworkTestDriver: evalSetVariable:  	dict now is  {'IPaddress': {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}}
frameworkTestDriver: evalSetVariable:  	key is:  IPaddress
frameworkTestDriver: evalSetVariable:  	dict now is  {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}
frameworkTestDriver: evalSetVariable:  	key is:  MMSC
frameworkTestDriver: evalSetVariable:  	dict now is  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: evalSetVariable:  YAML_IP_DST : value is:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: startYAMLTestValidation:  PACKET PARSING TO START FROM: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%:  26531
frameworkTestDriver: startYAMLTestValidationPerFile:  ALL VALIDATION IN GIVEN YAML FILE:  [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-notifyresp-ind', 'LAYER': 'mmse', 'METHOD_ID': '131', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 4, 'DICTS': [{'key': 'REQUEST_METHOD', 'value': 'POST'}, {'key': 'REQUEST_URI', 'value': '/mms/wapenc'}, {'key': 'REQUEST_VERSION', 'value': 'HTTP/1.1'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'MSISDN'}]}, {'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 5, 'DICTS': [{'key': 'MESSAGE_TYPE', 'value': '131'}, {'GETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'key': 'TRANSACTION_ID'}, {'key': 'STATUS', 'value': '129'}]}], 'DESCRIPTION': 'Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_NOTIFYRESP_IND'}]}}]
frameworkTestDriver: startYAMLTestValidationPerFile:  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$VALIDATION PER FILE PER KEY IS:  {'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-notifyresp-ind', 'LAYER': 'mmse', 'METHOD_ID': '131', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 4, 'DICTS': [{'key': 'REQUEST_METHOD', 'value': 'POST'}, {'key': 'REQUEST_URI', 'value': '/mms/wapenc'}, {'key': 'REQUEST_VERSION', 'value': 'HTTP/1.1'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'MSISDN'}]}, {'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 5, 'DICTS': [{'key': 'MESSAGE_TYPE', 'value': '131'}, {'GETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'key': 'TRANSACTION_ID'}, {'key': 'STATUS', 'value': '129'}]}], 'DESCRIPTION': 'Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_NOTIFYRESP_IND'}]}}
*****************************************************************


frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.92
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26532  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.85
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26534  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28969  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28970  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28971  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28972  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28973  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28974  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28975  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28977  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28978  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28979  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  29555 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  29555
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  29555 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-notifyresp-ind', 'LAYER': 'mmse', 'METHOD_ID': '131', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-notifyresp-ind', 'LAYER': 'mmse', 'METHOD_ID': '131', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  29555  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.69.81
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  29559  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  29565 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  29565
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  29565 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-notifyresp-ind', 'LAYER': 'mmse', 'METHOD_ID': '131', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-notifyresp-ind', 'LAYER': 'mmse', 'METHOD_ID': '131', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  29565  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  172.24.64.106
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  29751  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.90
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.168.210.90  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  31143 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  31143
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  31143 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-notifyresp-ind', 'LAYER': 'mmse', 'METHOD_ID': '131', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-notifyresp-ind', 'LAYER': 'mmse', 'METHOD_ID': '131', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-notifyresp-ind  MATCH FOUND
frameworkTestDriver: doProtocolCheck:  frame number is:  31143 result:  1
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'mmse', 'HEADER_NAME': 'X-Mms-Transaction-ID', 'GETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
frameworkTestDriver: doProtocolCheck:  MATCH VALUE IS:  equals
frameworkTestDriver: doProtocolCheck:  HEADER GETVAR IS:  PACKET_MMSE_NOTIFICATION_TID  HEADER GET VALUE IS:  mavodi-1-89-1-3-65-1-8e-2-65-50e7002
frameworkTestDriver: doProtocolCheck:  HEADER NAME:  X-Mms-Transaction-ID  MATCHED:  mavodi-1-89-1-3-65-1-8e-2-65-50e7002
frameworkTestDriver: doProtocolCheck:  result:  2  matched with result_max:  2
frameworkTestDriver: doProtocolCheck:  frame number is:  31143
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: PASSED, FRAME:  31143 

*****************************************************************


*****************************************************************


frameworkTestDriver: validatePacket:  VALIDATE PACKET DICTIONARY LIST:  [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 4, 'DICTS': [{'key': 'REQUEST_METHOD', 'value': 'POST'}, {'key': 'REQUEST_URI', 'value': '/mms/wapenc'}, {'key': 'REQUEST_VERSION', 'value': 'HTTP/1.1'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'MSISDN'}]}, {'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 5, 'DICTS': [{'key': 'MESSAGE_TYPE', 'value': '131'}, {'GETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'key': 'TRANSACTION_ID'}, {'key': 'STATUS', 'value': '129'}]}]
frameworkTestDriver: validatePacket:  Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN
frameworkTestDriver: validatePacket:  VALIDATE DICT:  {'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 4, 'DICTS': [{'key': 'REQUEST_METHOD', 'value': 'POST'}, {'key': 'REQUEST_URI', 'value': '/mms/wapenc'}, {'key': 'REQUEST_VERSION', 'value': 'HTTP/1.1'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'MSISDN'}]}
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'REQUEST_METHOD', 'value': 'POST'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  REQUEST_METHOD
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  POST
frameworkTestDriver: validatePacket:  PARAM KEY:  REQUEST_METHOD  PARAM VAL:  POST
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'REQUEST_URI', 'value': '/mms/wapenc'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  REQUEST_URI
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  /mms/wapenc
frameworkTestDriver: validatePacket:  PARAM KEY:  REQUEST_URI  PARAM VAL:  /mms/wapenc
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'REQUEST_VERSION', 'value': 'HTTP/1.1'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  REQUEST_VERSION
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  HTTP/1.1
frameworkTestDriver: validatePacket:  PARAM KEY:  REQUEST_VERSION  PARAM VAL:  HTTP/1.1
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  CONTENT_TYPE
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  application/vnd.wap.mms-message
frameworkTestDriver: validatePacket:  PARAM KEY:  CONTENT_TYPE  PARAM VAL:  application/vnd.wap.mms-message
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'GETVAR': 'YAML_MSISDN_B', 'key': 'MSISDN'}
frameworkTestDriver: validatePacket:  KEY IS:  GETVAR  DICT ELEM KEY IS:  YAML_MSISDN_B
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  MSISDN
frameworkTestDriver: validatePacket:  PARAM KEY:  MSISDN  PARAM VAL:  12010500082
frameworkTestDriver: validatePacket:  ORDERED VALIDATE PARAM DICT:  OrderedDict([('REQUEST_METHOD', 'POST'), ('REQUEST_URI', '/mms/wapenc'), ('REQUEST_VERSION', 'HTTP/1.1'), ('CONTENT_TYPE', 'application/vnd.wap.mms-message'), ('MSISDN', '12010500082')])
http_message_validation: validateHTTPMessage: actual_value POST
http_message_validation: validateHTTPMessage: print_value 	Expected: REQUEST_METHOD- POST		Actual: REQUEST_METHOD- POST
http_message_validation: validateHTTPMessage: actual_value /mms/wapenc
http_message_validation: validateHTTPMessage: print_value 	Expected: REQUEST_URI- /mms/wapenc		Actual: REQUEST_URI- /mms/wapenc
http_message_validation: validateHTTPMessage: actual_value application/vnd.wap.mms-message
http_message_validation: validateHTTPMessage: print_value 	Expected: CONTENT_TYPE- application/vnd.wap.mms-message		Actual: CONTENT_TYPE- application/vnd.wap.mms-message
http_message_validation: getMSISDN: val:  12010500082
http_message_validation: validateHTTPMessage: actual_value 12010500082
http_message_validation: validateHTTPMessage: print_value 	Expected: MSISDN- 12010500082		Actual: MSISDN- 12010500082
frameworkTestDriver: validatePacket:  VALIDATE DICT:  {'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 5, 'DICTS': [{'key': 'MESSAGE_TYPE', 'value': '131'}, {'GETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'key': 'TRANSACTION_ID'}, {'key': 'STATUS', 'value': '129'}]}
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'MESSAGE_TYPE', 'value': '131'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  MESSAGE_TYPE
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  131
frameworkTestDriver: validatePacket:  PARAM KEY:  MESSAGE_TYPE  PARAM VAL:  131
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'GETVAR': 'PACKET_MMSE_NOTIFICATION_TID', 'key': 'TRANSACTION_ID'}
frameworkTestDriver: validatePacket:  KEY IS:  GETVAR  DICT ELEM KEY IS:  PACKET_MMSE_NOTIFICATION_TID
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  TRANSACTION_ID
frameworkTestDriver: validatePacket:  PARAM KEY:  TRANSACTION_ID  PARAM VAL:  mavodi-1-89-1-3-65-1-8e-2-65-50e7002
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'STATUS', 'value': '129'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  STATUS
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  129
frameworkTestDriver: validatePacket:  PARAM KEY:  STATUS  PARAM VAL:  129
frameworkTestDriver: validatePacket:  ORDERED VALIDATE PARAM DICT:  OrderedDict([('MESSAGE_TYPE', '131'), ('TRANSACTION_ID', 'mavodi-1-89-1-3-65-1-8e-2-65-50e7002'), ('STATUS', '129')])
mmse_message_validation: validateMMSEMessage: Checking for : MESSAGE_TYPE
mmse_message_validation: validateMMSEMessage: actual_value 131
mmse_message_validation: validateMMSEMessage: print_value 	Expected: MESSAGE_TYPE- 131		Actual: MESSAGE_TYPE- 131
mmse_message_validation: validateMMSEMessage: Checking for : TRANSACTION_ID
mmse_message_validation: validateMMSEMessage: actual_value mavodi-1-89-1-3-65-1-8e-2-65-50e7002
mmse_message_validation: validateMMSEMessage: print_value 	Expected: TRANSACTION_ID- mavodi-1-89-1-3-65-1-8e-2-65-50e7002		Actual: TRANSACTION_ID- mavodi-1-89-1-3-65-1-8e-2-65-50e7002
mmse_message_validation: validateMMSEMessage: Checking for : STATUS
mmse_message_validation: validateMMSEMessage: actual_value 129
mmse_message_validation: validateMMSEMessage: print_value 	Expected: STATUS- 129		Actual: STATUS- 129
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: validatePacket:  VALIDATE PACKET RESULT:  ['Validate MMSE M-SEND-REQ method for reqired MSISDN', 'Validate MMSE M-SEND-CONF method for reqired MSISDN', 'Validate MMSE M-SEND-CONF2 method for reqired MSISDN', 'Validate diameter UDR', 'Validate diameter UDA', 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN']
frameworkTestDriver: validatePacket:  VALIDATE PACKET MESSAGE:  ['&lt;b style="color:green"&gt;Validate MMSE M-SEND-REQ method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: IMSI- 310310990010060\t\tActual: IMSI- 310310990010060 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF2 method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate diameter UDR&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: CMD_CODE- 306\t\tActual: CMD_CODE- 306 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate diameter UDA&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: SESSION_ID- tmormstp2.mavenir.com;230429661;34891\t\tActual: SESSION_ID- tmormstp2.mavenir.com;230429661;34891 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT\t\tActual: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: FROM- 12010500100\t\tActual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: FROM- 12010500100\t\tActual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: SMPPBIND- 2300\t\tActual: SMPPBIND- 2300 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500082\t\tActual: MSISDN- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500082\t\tActual: MSISDN- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MESSAGE_TYPE- 131\t\tActual: MESSAGE_TYPE- 131 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: TRANSACTION_ID- mavodi-1-89-1-3-65-1-8e-2-65-50e7002\t\tActual: TRANSACTION_ID- mavodi-1-89-1-3-65-1-8e-2-65-50e7002 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: STATUS- 129\t\tActual: STATUS- 129 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n']
frameworkTestDriver: validatePacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;VALIDATE PACKET CHECK: PASSED, FRAME:  31143 

*****************************************************************


frameworkTestDriver: postValidation:  POST_VALIDATION PROTOCOL CHECK:  [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_NOTIFYRESP_IND'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_NOTIFYRESP_IND'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: postValidation:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;POST_VALIDATION PROTOCOL CHECK: PASSED, FRAME:  31143 

frameworkTestDriver: startYAMLTestValidation:  order:  7
frameworkTestDriver: startYAMLTestValidation:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_retrieve_conf.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_NOTIFICATION_IND', 'MATCH': 'greater'}}
frameworkTestDriver: startYAMLTestValidation:  	pass criteria: {'ON_FAIL_SKIP_TO': 8}
frameworkTestDriver: startYAMLTestValidation:  	config variables: [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}]
frameworkTestDriver: startYAMLTestValidation:  	config variables:  {'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}
frameworkTestDriver: evalSetVariable:  variable:  YAML_IP_SRC=$NGN:IPaddress:MMSC
frameworkTestDriver: evalSetVariable:  the var is:  YAML_IP_SRC
frameworkTestDriver: evalSetVariable:  key list first elem:  NGN
frameworkTestDriver: evalSetVariable:  	key is:  NGN
frameworkTestDriver: evalSetVariable:  	dict now is  {'IPaddress': {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}}
frameworkTestDriver: evalSetVariable:  	key is:  IPaddress
frameworkTestDriver: evalSetVariable:  	dict now is  {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}
frameworkTestDriver: evalSetVariable:  	key is:  MMSC
frameworkTestDriver: evalSetVariable:  	dict now is  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: evalSetVariable:  YAML_IP_SRC : value is:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: startYAMLTestValidation:  PACKET PARSING TO START FROM: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%:  26531
frameworkTestDriver: startYAMLTestValidationPerFile:  ALL VALIDATION IN GIVEN YAML FILE:  [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-retrieve-conf', 'LAYER': 'mmse', 'METHOD_ID': '132', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'RESPONSE_CODE', 'value': '200'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}]}, {'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 6, 'DICTS': [{'key': 'MESSAGE_TYPE', 'value': '132'}, {'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'TO'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'FROM'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'http', 'HEADER_NAME': 'REQUEST_IN', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_HTTP_REQUEST_IN_FRAME', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_RETRIEVE_CONF_200OK'}]}}, {'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'GETVAR': 'PACKET_HTTP_REQUEST_IN_FRAME', 'ADVANCE_PARAMS': None, 'TYPE': 'parse_header', 'ORDER': 2, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 3, 'DICTS': [{'key': 'REQUEST_METHOD', 'value': 'GET'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'MSISDN'}]}], 'DESCRIPTION': 'Validate MMSE M-RETRIEVE-CONF GET method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 4, 'SETVAR': 'PACKET_NUM_MMSE_RETRIEVE_CONF_GET'}]}}]
frameworkTestDriver: startYAMLTestValidationPerFile:  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$VALIDATION PER FILE PER KEY IS:  {'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-retrieve-conf', 'LAYER': 'mmse', 'METHOD_ID': '132', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'RESPONSE_CODE', 'value': '200'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}]}, {'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 6, 'DICTS': [{'key': 'MESSAGE_TYPE', 'value': '132'}, {'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'TO'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'FROM'}]}], 'PARSE_PACKET': {'PROTOCOL_CHECK': [{'LAYER': 'http', 'HEADER_NAME': 'REQUEST_IN', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_HTTP_REQUEST_IN_FRAME', 'ORDER': 4}]}, 'DESCRIPTION': 'Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_RETRIEVE_CONF_200OK'}]}}
*****************************************************************


frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.40
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.174.68.40  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  26532 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26532
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26532 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-retrieve-conf', 'LAYER': 'mmse', 'METHOD_ID': '132', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-retrieve-conf', 'LAYER': 'mmse', 'METHOD_ID': '132', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-retrieve-conf  MATCH NOT FOUND
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  26532  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.92
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26534  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28969  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28970  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28971  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28972  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28973  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28974  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28975  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28977  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28978  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28979  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  172.24.64.106
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  29555  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  29559 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  29559
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  29559 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-retrieve-conf', 'LAYER': 'mmse', 'METHOD_ID': '132', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-retrieve-conf', 'LAYER': 'mmse', 'METHOD_ID': '132', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  29559  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.69.81
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  29565  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_SRC', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_src', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_SRC
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_src
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  29751 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  29751
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  29751 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-retrieve-conf', 'LAYER': 'mmse', 'METHOD_ID': '132', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-retrieve-conf', 'LAYER': 'mmse', 'METHOD_ID': '132', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-retrieve-conf  MATCH FOUND
frameworkTestDriver: doProtocolCheck:  frame number is:  29751 result:  1
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
frameworkTestDriver: doProtocolCheck:  MATCH VALUE IS:  equals
frameworkTestDriver: doProtocolCheck:  HEADER GETVAR IS:  PACKET_MMSE_MID  HEADER GET VALUE IS:  mavodi-1-88-3-3-65-58641b8d-520af9c91f43
frameworkTestDriver: doProtocolCheck:  HEADER NAME:  Message-Id  MATCHED:  mavodi-1-88-3-3-65-58641b8d-520af9c91f43
frameworkTestDriver: doProtocolCheck:  result:  2  matched with result_max:  2
frameworkTestDriver: doProtocolCheck:  frame number is:  29751
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: PASSED, FRAME:  29751 

*****************************************************************


frameworkTestDriver: parsePacket:  PARSE PROTOCOL CHECK:  [{'LAYER': 'http', 'HEADER_NAME': 'REQUEST_IN', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_HTTP_REQUEST_IN_FRAME', 'ORDER': 4}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'http', 'HEADER_NAME': 'REQUEST_IN', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'SETVAR': 'PACKET_HTTP_REQUEST_IN_FRAME', 'ORDER': 4}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: parsePacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;PARSE PROTOCOL CHECK: PASSED, FRAME:  29751 

*****************************************************************


frameworkTestDriver: validatePacket:  VALIDATE PACKET DICTIONARY LIST:  [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'RESPONSE_CODE', 'value': '200'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}]}, {'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 6, 'DICTS': [{'key': 'MESSAGE_TYPE', 'value': '132'}, {'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'TO'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'FROM'}]}]
frameworkTestDriver: validatePacket:  Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN
frameworkTestDriver: validatePacket:  VALIDATE DICT:  {'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 5, 'DICTS': [{'key': 'RESPONSE_CODE', 'value': '200'}, {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}]}
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'RESPONSE_CODE', 'value': '200'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  RESPONSE_CODE
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  200
frameworkTestDriver: validatePacket:  PARAM KEY:  RESPONSE_CODE  PARAM VAL:  200
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'CONTENT_TYPE', 'value': 'application/vnd.wap.mms-message'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  CONTENT_TYPE
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  application/vnd.wap.mms-message
frameworkTestDriver: validatePacket:  PARAM KEY:  CONTENT_TYPE  PARAM VAL:  application/vnd.wap.mms-message
frameworkTestDriver: validatePacket:  ORDERED VALIDATE PARAM DICT:  OrderedDict([('RESPONSE_CODE', '200'), ('CONTENT_TYPE', 'application/vnd.wap.mms-message')])
http_message_validation: validateHTTPMessage: actual_value 200
http_message_validation: validateHTTPMessage: print_value 	Expected: RESPONSE_CODE- 200		Actual: RESPONSE_CODE- 200
http_message_validation: validateHTTPMessage: actual_value application/vnd.wap.mms-message
http_message_validation: validateHTTPMessage: print_value 	Expected: CONTENT_TYPE- application/vnd.wap.mms-message		Actual: CONTENT_TYPE- application/vnd.wap.mms-message
frameworkTestDriver: validatePacket:  VALIDATE DICT:  {'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 6, 'DICTS': [{'key': 'MESSAGE_TYPE', 'value': '132'}, {'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'TO'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'FROM'}]}
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'MESSAGE_TYPE', 'value': '132'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  MESSAGE_TYPE
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  132
frameworkTestDriver: validatePacket:  PARAM KEY:  MESSAGE_TYPE  PARAM VAL:  132
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}
frameworkTestDriver: validatePacket:  KEY IS:  GETVAR  DICT ELEM KEY IS:  PACKET_MMSE_MID
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  MESSAGE_ID
frameworkTestDriver: validatePacket:  PARAM KEY:  MESSAGE_ID  PARAM VAL:  mavodi-1-88-3-3-65-58641b8d-520af9c91f43
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'GETVAR': 'YAML_MSISDN_B', 'key': 'TO'}
frameworkTestDriver: validatePacket:  KEY IS:  GETVAR  DICT ELEM KEY IS:  YAML_MSISDN_B
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  TO
frameworkTestDriver: validatePacket:  PARAM KEY:  TO  PARAM VAL:  12010500082
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'GETVAR': 'YAML_MSISDN_A', 'key': 'FROM'}
frameworkTestDriver: validatePacket:  KEY IS:  GETVAR  DICT ELEM KEY IS:  YAML_MSISDN_A
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  FROM
frameworkTestDriver: validatePacket:  PARAM KEY:  FROM  PARAM VAL:  12010500100
frameworkTestDriver: validatePacket:  ORDERED VALIDATE PARAM DICT:  OrderedDict([('MESSAGE_TYPE', '132'), ('MESSAGE_ID', 'mavodi-1-88-3-3-65-58641b8d-520af9c91f43'), ('TO', '12010500082'), ('FROM', '12010500100')])
mmse_message_validation: validateMMSEMessage: Checking for : MESSAGE_TYPE
mmse_message_validation: validateMMSEMessage: actual_value 132
mmse_message_validation: validateMMSEMessage: print_value 	Expected: MESSAGE_TYPE- 132		Actual: MESSAGE_TYPE- 132
mmse_message_validation: validateMMSEMessage: Checking for : MESSAGE_ID
mmse_message_validation: validateMMSEMessage: actual_value mavodi-1-88-3-3-65-58641b8d-520af9c91f43
mmse_message_validation: validateMMSEMessage: print_value 	Expected: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43		Actual: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43
mmse_message_validation: validateMMSEMessage: Checking for : TO
mmse_message_validation: validateMMSEMessage: actual_value 12010500082
mmse_message_validation: validateMMSEMessage: print_value 	Expected: TO- 12010500082		Actual: TO- 12010500082
mmse_message_validation: validateMMSEMessage: Checking for : FROM
MMSEMessageValidation: getMMSEFrom:  12010500100/TYPE=PLMN
mmse_message_validation: validateMMSEMessage: actual_value 12010500100
mmse_message_validation: validateMMSEMessage: print_value 	Expected: FROM- 12010500100		Actual: FROM- 12010500100
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: validatePacket:  VALIDATE PACKET RESULT:  ['Validate MMSE M-SEND-REQ method for reqired MSISDN', 'Validate MMSE M-SEND-CONF method for reqired MSISDN', 'Validate MMSE M-SEND-CONF2 method for reqired MSISDN', 'Validate diameter UDR', 'Validate diameter UDA', 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN', 'Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN', 'Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN']
frameworkTestDriver: validatePacket:  VALIDATE PACKET MESSAGE:  ['&lt;b style="color:green"&gt;Validate MMSE M-SEND-REQ method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: IMSI- 310310990010060\t\tActual: IMSI- 310310990010060 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF2 method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate diameter UDR&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: CMD_CODE- 306\t\tActual: CMD_CODE- 306 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate diameter UDA&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: SESSION_ID- tmormstp2.mavenir.com;230429661;34891\t\tActual: SESSION_ID- tmormstp2.mavenir.com;230429661;34891 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT\t\tActual: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: FROM- 12010500100\t\tActual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: FROM- 12010500100\t\tActual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: SMPPBIND- 2300\t\tActual: SMPPBIND- 2300 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500082\t\tActual: MSISDN- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500082\t\tActual: MSISDN- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MESSAGE_TYPE- 131\t\tActual: MESSAGE_TYPE- 131 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: TRANSACTION_ID- mavodi-1-89-1-3-65-1-8e-2-65-50e7002\t\tActual: TRANSACTION_ID- mavodi-1-89-1-3-65-1-8e-2-65-50e7002 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: STATUS- 129\t\tActual: STATUS- 129 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MESSAGE_TYPE- 132\t\tActual: MESSAGE_TYPE- 132 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43\t\tActual: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: TO- 12010500082\t\tActual: TO- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: FROM- 12010500100\t\tActual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n']
frameworkTestDriver: validatePacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;VALIDATE PACKET CHECK: PASSED, FRAME:  29751 

*****************************************************************


frameworkTestDriver: postValidation:  POST_VALIDATION PROTOCOL CHECK:  [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_RETRIEVE_CONF_200OK'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_RETRIEVE_CONF_200OK'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: postValidation:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;POST_VALIDATION PROTOCOL CHECK: PASSED, FRAME:  29751 

frameworkTestDriver: startYAMLTestValidationPerFile:  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$VALIDATION PER FILE PER KEY IS:  {'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'GETVAR': 'PACKET_HTTP_REQUEST_IN_FRAME', 'ADVANCE_PARAMS': None, 'TYPE': 'parse_header', 'ORDER': 2, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 3, 'DICTS': [{'key': 'REQUEST_METHOD', 'value': 'GET'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'MSISDN'}]}], 'DESCRIPTION': 'Validate MMSE M-RETRIEVE-CONF GET method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 4, 'SETVAR': 'PACKET_NUM_MMSE_RETRIEVE_CONF_GET'}]}}
*****************************************************************


frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.92
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26532  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.85
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  26534  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28969  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28970  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28971  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28972  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28973  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28974  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28975  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28977  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28978  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28979  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  29555 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  29555
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  29555 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'GETVAR': 'PACKET_HTTP_REQUEST_IN_FRAME', 'ADVANCE_PARAMS': None, 'TYPE': 'parse_header', 'ORDER': 2, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'GETVAR': 'PACKET_HTTP_REQUEST_IN_FRAME', 'ADVANCE_PARAMS': None, 'TYPE': 'parse_header', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
frameworkTestDriver: doProtocolCheck:  MATCH VALUE IS:  equals
frameworkTestDriver: doProtocolCheck:  HEADER GETVAR IS:  PACKET_HTTP_REQUEST_IN_FRAME  HEADER GET VALUE IS:  29555
frameworkTestDriver: doProtocolCheck:  HEADER NAME:  FRAME NUMBER  MATCHED:  29555
frameworkTestDriver: doProtocolCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doProtocolCheck:  frame number is:  29555
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: PASSED, FRAME:  29555 

*****************************************************************


*****************************************************************


frameworkTestDriver: validatePacket:  VALIDATE PACKET DICTIONARY LIST:  [{'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 3, 'DICTS': [{'key': 'REQUEST_METHOD', 'value': 'GET'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'MSISDN'}]}]
frameworkTestDriver: validatePacket:  Validate MMSE M-RETRIEVE-CONF GET method for reqired MSISDN
frameworkTestDriver: validatePacket:  VALIDATE DICT:  {'LAYER': 'http', 'TYPE': 'http_validation', 'ORDER': 3, 'DICTS': [{'key': 'REQUEST_METHOD', 'value': 'GET'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'MSISDN'}]}
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'REQUEST_METHOD', 'value': 'GET'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  REQUEST_METHOD
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  GET
frameworkTestDriver: validatePacket:  PARAM KEY:  REQUEST_METHOD  PARAM VAL:  GET
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'GETVAR': 'YAML_MSISDN_B', 'key': 'MSISDN'}
frameworkTestDriver: validatePacket:  KEY IS:  GETVAR  DICT ELEM KEY IS:  YAML_MSISDN_B
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  MSISDN
frameworkTestDriver: validatePacket:  PARAM KEY:  MSISDN  PARAM VAL:  12010500082
frameworkTestDriver: validatePacket:  ORDERED VALIDATE PARAM DICT:  OrderedDict([('REQUEST_METHOD', 'GET'), ('MSISDN', '12010500082')])
http_message_validation: validateHTTPMessage: actual_value GET
http_message_validation: validateHTTPMessage: print_value 	Expected: REQUEST_METHOD- GET		Actual: REQUEST_METHOD- GET
http_message_validation: getMSISDN: val:  12010500082
http_message_validation: validateHTTPMessage: actual_value 12010500082
http_message_validation: validateHTTPMessage: print_value 	Expected: MSISDN- 12010500082		Actual: MSISDN- 12010500082
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: validatePacket:  VALIDATE PACKET RESULT:  ['Validate MMSE M-SEND-REQ method for reqired MSISDN', 'Validate MMSE M-SEND-CONF method for reqired MSISDN', 'Validate MMSE M-SEND-CONF2 method for reqired MSISDN', 'Validate diameter UDR', 'Validate diameter UDA', 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN', 'Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN', 'Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN', 'Validate MMSE M-RETRIEVE-CONF GET method for reqired MSISDN']
frameworkTestDriver: validatePacket:  VALIDATE PACKET MESSAGE:  ['&lt;b style="color:green"&gt;Validate MMSE M-SEND-REQ method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: IMSI- 310310990010060\t\tActual: IMSI- 310310990010060 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF2 method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate diameter UDR&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: CMD_CODE- 306\t\tActual: CMD_CODE- 306 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate diameter UDA&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: SESSION_ID- tmormstp2.mavenir.com;230429661;34891\t\tActual: SESSION_ID- tmormstp2.mavenir.com;230429661;34891 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT\t\tActual: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: FROM- 12010500100\t\tActual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: FROM- 12010500100\t\tActual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: SMPPBIND- 2300\t\tActual: SMPPBIND- 2300 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500082\t\tActual: MSISDN- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500082\t\tActual: MSISDN- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MESSAGE_TYPE- 131\t\tActual: MESSAGE_TYPE- 131 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: TRANSACTION_ID- mavodi-1-89-1-3-65-1-8e-2-65-50e7002\t\tActual: TRANSACTION_ID- mavodi-1-89-1-3-65-1-8e-2-65-50e7002 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: STATUS- 129\t\tActual: STATUS- 129 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MESSAGE_TYPE- 132\t\tActual: MESSAGE_TYPE- 132 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43\t\tActual: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: TO- 12010500082\t\tActual: TO- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: FROM- 12010500100\t\tActual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-RETRIEVE-CONF GET method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- GET\t\tActual: REQUEST_METHOD- GET - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500082\t\tActual: MSISDN- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n']
frameworkTestDriver: validatePacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;VALIDATE PACKET CHECK: PASSED, FRAME:  29555 

*****************************************************************


frameworkTestDriver: postValidation:  POST_VALIDATION PROTOCOL CHECK:  [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 4, 'SETVAR': 'PACKET_NUM_MMSE_RETRIEVE_CONF_GET'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 4, 'SETVAR': 'PACKET_NUM_MMSE_RETRIEVE_CONF_GET'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: postValidation:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;POST_VALIDATION PROTOCOL CHECK: PASSED, FRAME:  29555 

frameworkTestDriver: startYAMLTestValidation:  order:  8
frameworkTestDriver: startYAMLTestValidation:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_delivery_ind.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}, {'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:SMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_NOTIFICATION_IND', 'MATCH': 'greater'}}
frameworkTestDriver: startYAMLTestValidation:  	pass criteria: {'ON_FAIL_SKIP_TO': 9}
frameworkTestDriver: startYAMLTestValidation:  	config variables: [{'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}, {'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:SMSC'}]
frameworkTestDriver: startYAMLTestValidation:  	config variables:  {'SETVAR': 'YAML_IP_SRC=$NGN:IPaddress:MMSC'}
frameworkTestDriver: evalSetVariable:  variable:  YAML_IP_SRC=$NGN:IPaddress:MMSC
frameworkTestDriver: evalSetVariable:  the var is:  YAML_IP_SRC
frameworkTestDriver: evalSetVariable:  key list first elem:  NGN
frameworkTestDriver: evalSetVariable:  	key is:  NGN
frameworkTestDriver: evalSetVariable:  	dict now is  {'IPaddress': {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}}
frameworkTestDriver: evalSetVariable:  	key is:  IPaddress
frameworkTestDriver: evalSetVariable:  	dict now is  {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}
frameworkTestDriver: evalSetVariable:  	key is:  MMSC
frameworkTestDriver: evalSetVariable:  	dict now is  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: evalSetVariable:  YAML_IP_SRC : value is:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: startYAMLTestValidation:  	config variables:  {'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:SMSC'}
frameworkTestDriver: evalSetVariable:  variable:  YAML_IP_DST=$NGN:IPaddress:SMSC
frameworkTestDriver: evalSetVariable:  the var is:  YAML_IP_DST
frameworkTestDriver: evalSetVariable:  key list first elem:  NGN
frameworkTestDriver: evalSetVariable:  	key is:  NGN
frameworkTestDriver: evalSetVariable:  	dict now is  {'IPaddress': {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}}
frameworkTestDriver: evalSetVariable:  	key is:  IPaddress
frameworkTestDriver: evalSetVariable:  	dict now is  {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}
frameworkTestDriver: evalSetVariable:  	key is:  SMSC
frameworkTestDriver: evalSetVariable:  	dict now is  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: evalSetVariable:  YAML_IP_DST : value is:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: startYAMLTestValidation:  PACKET PARSING TO START FROM: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%:  26531
frameworkTestDriver: startYAMLTestValidationPerFile:  ALL VALIDATION IN GIVEN YAML FILE:  [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-delivery-ind', 'LAYER': 'mmse', 'METHOD_ID': '134', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 4, 'DICTS': [{'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'TO'}]}, {'LAYER': 'smpp', 'TYPE': 'mmse_validation', 'ORDER': 5, 'DICTS': [{'GETVAR': 'YAML_MSISDN_A', 'key': 'SMPPDESTADDR'}, {'key': 'SMPPBIND', 'value': '2300'}]}], 'DESCRIPTION': 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_DELIVERY_IND'}]}}]
frameworkTestDriver: startYAMLTestValidationPerFile:  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$VALIDATION PER FILE PER KEY IS:  {'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-delivery-ind', 'LAYER': 'mmse', 'METHOD_ID': '134', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 4, 'DICTS': [{'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'TO'}]}, {'LAYER': 'smpp', 'TYPE': 'mmse_validation', 'ORDER': 5, 'DICTS': [{'GETVAR': 'YAML_MSISDN_A', 'key': 'SMPPDESTADDR'}, {'key': 'SMPPBIND', 'value': '2300'}]}], 'DESCRIPTION': 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_DELIVERY_IND'}]}}
*****************************************************************


frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.92
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.174.68.92  IS FOUND IN:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  frame number is:  26532 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26532
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26532 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-delivery-ind', 'LAYER': 'mmse', 'METHOD_ID': '134', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-delivery-ind', 'LAYER': 'mmse', 'METHOD_ID': '134', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-delivery-ind  MATCH NOT FOUND
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  26532  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.85
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.174.68.85  IS FOUND IN:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  frame number is:  26534 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  26534
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  26534 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-delivery-ind', 'LAYER': 'mmse', 'METHOD_ID': '134', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-delivery-ind', 'LAYER': 'mmse', 'METHOD_ID': '134', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-delivery-ind  MATCH NOT FOUND
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  26534  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28969  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28970  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28971  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28972  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28973  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28974  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28975  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28977  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28978  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  28979  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  29555  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.69.81
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  29559  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  29565  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  172.24.64.106
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  29751  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.90
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  31143  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  31144  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.88
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  31146  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  172.24.64.106
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  31147  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  172.24.64.106
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  31148  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  172.24.64.106
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  31149  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  172.24.64.106
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  31150  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.174.68.21  IS FOUND IN:  10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21
frameworkTestDriver: doIPCheck:  frame number is:  31152 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  31152
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  31152 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-delivery-ind', 'LAYER': 'mmse', 'METHOD_ID': '134', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-delivery-ind', 'LAYER': 'mmse', 'METHOD_ID': '134', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-delivery-ind  MATCH FOUND
frameworkTestDriver: doProtocolCheck:  frame number is:  31152 result:  1
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
frameworkTestDriver: doProtocolCheck:  MATCH VALUE IS:  equals
frameworkTestDriver: doProtocolCheck:  HEADER GETVAR IS:  PACKET_MMSE_MID  HEADER GET VALUE IS:  mavodi-1-88-3-3-65-58641b8d-520af9c91f43
frameworkTestDriver: doProtocolCheck:  HEADER NAME:  Message-Id  MATCHED:  mavodi-1-88-3-3-65-58641b8d-520af9c91f43
frameworkTestDriver: doProtocolCheck:  result:  2  matched with result_max:  2
frameworkTestDriver: doProtocolCheck:  frame number is:  31152
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: PASSED, FRAME:  31152 

*****************************************************************


*****************************************************************


frameworkTestDriver: validatePacket:  VALIDATE PACKET DICTIONARY LIST:  [{'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 4, 'DICTS': [{'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'TO'}]}, {'LAYER': 'smpp', 'TYPE': 'mmse_validation', 'ORDER': 5, 'DICTS': [{'GETVAR': 'YAML_MSISDN_A', 'key': 'SMPPDESTADDR'}, {'key': 'SMPPBIND', 'value': '2300'}]}]
frameworkTestDriver: validatePacket:  Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN
frameworkTestDriver: validatePacket:  VALIDATE DICT:  {'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 4, 'DICTS': [{'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}, {'GETVAR': 'YAML_MSISDN_B', 'key': 'TO'}]}
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}
frameworkTestDriver: validatePacket:  KEY IS:  GETVAR  DICT ELEM KEY IS:  PACKET_MMSE_MID
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  MESSAGE_ID
frameworkTestDriver: validatePacket:  PARAM KEY:  MESSAGE_ID  PARAM VAL:  mavodi-1-88-3-3-65-58641b8d-520af9c91f43
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'GETVAR': 'YAML_MSISDN_B', 'key': 'TO'}
frameworkTestDriver: validatePacket:  KEY IS:  GETVAR  DICT ELEM KEY IS:  YAML_MSISDN_B
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  TO
frameworkTestDriver: validatePacket:  PARAM KEY:  TO  PARAM VAL:  12010500082
frameworkTestDriver: validatePacket:  ORDERED VALIDATE PARAM DICT:  OrderedDict([('MESSAGE_ID', 'mavodi-1-88-3-3-65-58641b8d-520af9c91f43'), ('TO', '12010500082')])
mmse_message_validation: validateMMSEMessage: Checking for : MESSAGE_ID
mmse_message_validation: validateMMSEMessage: actual_value mavodi-1-88-3-3-65-58641b8d-520af9c91f43
mmse_message_validation: validateMMSEMessage: print_value 	Expected: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43		Actual: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43
mmse_message_validation: validateMMSEMessage: Checking for : TO
mmse_message_validation: validateMMSEMessage: actual_value 12010500082
mmse_message_validation: validateMMSEMessage: print_value 	Expected: TO- 12010500082		Actual: TO- 12010500082
frameworkTestDriver: validatePacket:  VALIDATE DICT:  {'LAYER': 'smpp', 'TYPE': 'mmse_validation', 'ORDER': 5, 'DICTS': [{'GETVAR': 'YAML_MSISDN_A', 'key': 'SMPPDESTADDR'}, {'key': 'SMPPBIND', 'value': '2300'}]}
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'GETVAR': 'YAML_MSISDN_A', 'key': 'SMPPDESTADDR'}
frameworkTestDriver: validatePacket:  KEY IS:  GETVAR  DICT ELEM KEY IS:  YAML_MSISDN_A
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  SMPPDESTADDR
frameworkTestDriver: validatePacket:  PARAM KEY:  SMPPDESTADDR  PARAM VAL:  12010500100
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'SMPPBIND', 'value': '2300'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  SMPPBIND
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  2300
frameworkTestDriver: validatePacket:  PARAM KEY:  SMPPBIND  PARAM VAL:  2300
frameworkTestDriver: validatePacket:  ORDERED VALIDATE PARAM DICT:  OrderedDict([('SMPPDESTADDR', '12010500100'), ('SMPPBIND', '2300')])
mmse_message_validation: validateMMSEMessage: Checking for : SMPPDESTADDR
mmse_message_validation: validateMMSEMessage: actual_value 12010500100
mmse_message_validation: validateMMSEMessage: print_value 	Expected: SMPPDESTADDR- 12010500100		Actual: SMPPDESTADDR- 12010500100
mmse_message_validation: validateMMSEMessage: Checking for : SMPPBIND
mmse_message_validation: validateMMSEMessage: actual_value 2300
mmse_message_validation: validateMMSEMessage: print_value 	Expected: SMPPBIND- 2300		Actual: SMPPBIND- 2300
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: validatePacket:  VALIDATE PACKET RESULT:  ['Validate MMSE M-SEND-REQ method for reqired MSISDN', 'Validate MMSE M-SEND-CONF method for reqired MSISDN', 'Validate MMSE M-SEND-CONF2 method for reqired MSISDN', 'Validate diameter UDR', 'Validate diameter UDA', 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN', 'Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN', 'Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN', 'Validate MMSE M-RETRIEVE-CONF GET method for reqired MSISDN', 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN']
frameworkTestDriver: validatePacket:  VALIDATE PACKET MESSAGE:  ['&lt;b style="color:green"&gt;Validate MMSE M-SEND-REQ method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: IMSI- 310310990010060\t\tActual: IMSI- 310310990010060 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF2 method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate diameter UDR&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: CMD_CODE- 306\t\tActual: CMD_CODE- 306 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate diameter UDA&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: SESSION_ID- tmormstp2.mavenir.com;230429661;34891\t\tActual: SESSION_ID- tmormstp2.mavenir.com;230429661;34891 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT\t\tActual: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: FROM- 12010500100\t\tActual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: FROM- 12010500100\t\tActual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: SMPPBIND- 2300\t\tActual: SMPPBIND- 2300 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500082\t\tActual: MSISDN- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500082\t\tActual: MSISDN- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MESSAGE_TYPE- 131\t\tActual: MESSAGE_TYPE- 131 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: TRANSACTION_ID- mavodi-1-89-1-3-65-1-8e-2-65-50e7002\t\tActual: TRANSACTION_ID- mavodi-1-89-1-3-65-1-8e-2-65-50e7002 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: STATUS- 129\t\tActual: STATUS- 129 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MESSAGE_TYPE- 132\t\tActual: MESSAGE_TYPE- 132 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43\t\tActual: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: TO- 12010500082\t\tActual: TO- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: FROM- 12010500100\t\tActual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-RETRIEVE-CONF GET method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- GET\t\tActual: REQUEST_METHOD- GET - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500082\t\tActual: MSISDN- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43\t\tActual: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: TO- 12010500082\t\tActual: TO- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43\t\tActual: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: TO- 12010500082\t\tActual: TO- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: SMPPDESTADDR- 12010500100\t\tActual: SMPPDESTADDR- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: SMPPBIND- 2300\t\tActual: SMPPBIND- 2300 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n']
frameworkTestDriver: validatePacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;VALIDATE PACKET CHECK: PASSED, FRAME:  31152 

*****************************************************************


frameworkTestDriver: postValidation:  POST_VALIDATION PROTOCOL CHECK:  [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_DELIVERY_IND'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 6, 'SETVAR': 'PACKET_NUM_MMSE_DELIVERY_IND'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: postValidation:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;POST_VALIDATION PROTOCOL CHECK: PASSED, FRAME:  31152 

frameworkTestDriver: startYAMLTestValidation:  order:  9
frameworkTestDriver: startYAMLTestValidation:  	config data: {'FILE_NAME': 'yaml/mmsc/validation_m_readrec_ind.yaml', 'VARIABLES': [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}], 'START_FRAME': {'GETVAR': 'PACKET_NUM_MMSE_DELIVERY_IND', 'MATCH': 'greater'}}
frameworkTestDriver: startYAMLTestValidation:  	pass criteria: {'ON_FAIL_SKIP_TO': 10}
frameworkTestDriver: startYAMLTestValidation:  	config variables: [{'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}]
frameworkTestDriver: startYAMLTestValidation:  	config variables:  {'SETVAR': 'YAML_IP_DST=$NGN:IPaddress:MMSC'}
frameworkTestDriver: evalSetVariable:  variable:  YAML_IP_DST=$NGN:IPaddress:MMSC
frameworkTestDriver: evalSetVariable:  the var is:  YAML_IP_DST
frameworkTestDriver: evalSetVariable:  key list first elem:  NGN
frameworkTestDriver: evalSetVariable:  	key is:  NGN
frameworkTestDriver: evalSetVariable:  	dict now is  {'IPaddress': {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}}
frameworkTestDriver: evalSetVariable:  	key is:  IPaddress
frameworkTestDriver: evalSetVariable:  	dict now is  {'WSG': '10.174.53.51', 'PUAG': '10.174.53.133, 10.174.53.132, 10.174.61.68, 10.174.53.54, 10.174.53.161, 10.174.53.132, 10.169.107.11, 10.175.19.38, 10.163.212.134, 10.163.212.137, 10.175.19.41, 10.188.19.41, 10.188.19.38', 'GMLC': '10.178.94.22, 10.178.94.23', 'RCS': '10.175.98.4, 10.174.53.142, 10.169.56.25, 10.161.186.53, 10.188.98.4', 'PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38', 'DRA': '10.169.49.69, 10.169.49.70, 10.169.49.72, 10.169.49.73', 'MSC': '10.168.222.1', 'BGF': '10.169.59.37, 10.169.59.36', 'TAS': '10.174.53.136, 10.169.160.116, 10.169.50.153, 10.169.50.244, 10.178.85.37, 10.160.69.116', 'UAS': '10.169.60.36', 'MGCF': '10.168.222.1', 'SAG': '10.174.68.92, 10.174.68.93', 'HSS': '10.169.49.69, 10.69.48.23', 'ISBC': '10.169.62.162', 'EAS': '10.174.53.160', 'WIRESHARK': '10.25.17.174, 5.232.44.86, 10.25.74.8', 'SBG': '10.169.60.32, 10.169.60.36, 10.169.63.116, 10.169.60.37, 10.169.60.38, 10.178.88.73, 10.178.81.70, 10.178.81.69, 10.178.81.68, 66.94.19.103', 'MMSC': '172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146', 'WRG': '10.165.16.132, 10.165.16.133', 'BGCF': '10.178.87.68', 'MSTORE': '10.188.96.73, 10.188.106.6, 10.188.106.12, 10.174.66.133, 10.174.66.132', 'PRESENCE': '172.30.5.212, 10.174.66.69', 'SMTP': '10.168.210.90', 'ASBC': '66.94.19.103, 10.169.63.116', 'STP': '10.168.241.10, 10.168.241.11, 10.168.241.2, 10.168.241.3', 'SMSC': '10.168.217.78, 10.174.58.70, 10.174.58.71, 10.174.58.90, 10.174.58.91, 10.174.58.68, 10.174.58.69, 10.174.58.88, 10.174.58.89, 10.174.68.84, 10.174.68.85, 10.174.68.92, 10.174.68.21', 'MRF': '10.174.61.29, 10.178.8.71, 10.178.8.69', 'SCSCF': '10.178.85.54, 172.30.5.165, 172.24.3.216, 10.174.53.140, 10.175.19.41, 10.166.233.204', 'CDB': '10.174.53.37, 10.169.49.69, 10.169.48.69', 'IMP': '10.174.68.105, 10.174.53.219, 10.174.53.218', 'ECSCF': '10.178.89.214', 'PNS': '10.178.68.193', 'SBG_PCSCF': '10.169.60.37, 10.169.60.36, 10.169.60.38, 10.169.60.32, 10.169.60.36', 'XDMS': '10.174.66.69', 'SBC': '10.169.63.116, 66.94.19.103', 'ICSCF': '10.174.53.138, 172.24.3.215, 172.30.5.164, 10.178.85.53', 'AISBC': '66.94.19.103, 10.169.62.162, 10.169.63.116', '1MGCF': '10.168.222.1', 'WEBRTC': '10.179.0.116, 10.179.0.119', 'RLS': '10.174.66.77', 'INC': '10.174.68.5, 10.174.68.6'}
frameworkTestDriver: evalSetVariable:  	key is:  MMSC
frameworkTestDriver: evalSetVariable:  	dict now is  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: evalSetVariable:  YAML_IP_DST : value is:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: startYAMLTestValidation:  PACKET PARSING TO START FROM: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%:  31152
frameworkTestDriver: startYAMLTestValidationPerFile:  ALL VALIDATION IN GIVEN YAML FILE:  [{'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 4, 'DICTS': [{'key': 'MESSAGE_TYPE', 'value': '135'}, {'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'TO'}, {'key': 'READ_STATUS', 'value': '128'}]}], 'DESCRIPTION': 'Validate MMSE M-READ-REC-IND method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 5, 'SETVAR': 'PACKET_NUM_MMSE_READREC_IND'}]}}]
frameworkTestDriver: startYAMLTestValidationPerFile:  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$VALIDATION PER FILE PER KEY IS:  {'IDENTIFY_PACKET': {'IP_CHECK': [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}], 'PROTOCOL_CHECK': [{'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]}, 'VALIDATE_PACKET': [{'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 4, 'DICTS': [{'key': 'MESSAGE_TYPE', 'value': '135'}, {'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'TO'}, {'key': 'READ_STATUS', 'value': '128'}]}], 'DESCRIPTION': 'Validate MMSE M-READ-REC-IND method for reqired MSISDN', 'POST_VALIDATION': {'PROTOCOL_CHECK': [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 5, 'SETVAR': 'PACKET_NUM_MMSE_READREC_IND'}]}}
*****************************************************************


frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.92
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  31153  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.85
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  31155  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.49.72
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  31165  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.85
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  31176  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  41079  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  41080  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  41082  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  41083  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  41084  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  41085  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  41086  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  41087  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  41088  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  41089  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  41090  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  41091  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  41407  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  41409  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  41410  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  41411  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  48589  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  48590  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  48591  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  48592  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  48593  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  48594  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  48595  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  48596  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  48597  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  48598  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  48599  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  48600  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.150
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  48996  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.84
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  48999  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56099  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56100  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56101  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56103  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56104  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56105  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56106  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56107  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56108  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56109  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56110  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56111  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56431  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56432  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56433  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56434  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.90
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.168.210.90  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  56808 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  56808
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  56808 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-read-rec-ind  MATCH NOT FOUND
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  56808  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  56812 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  56812
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  56812 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-read-rec-ind  MATCH NOT FOUND
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  56812  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.149
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56813  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  56816 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  56816
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  56816 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  56816  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.152
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56817  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.139
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.139  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  56818 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  56818
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  56818 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  56818  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.69.81
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56819  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  56820 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  56820
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  56820 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  56820  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.88
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56821  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.79.147
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56822  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.79.147
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56823  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.79.147
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56824  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.21
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56825  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.92
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56826  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.68.85
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  56827  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  57084 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  57084
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  57084 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  57084  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.69.81
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57085  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  57086 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  57086
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  57086 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  57086  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.79.147
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57089  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.79.147
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57090  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.90
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.168.210.90  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  57117 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  57117
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  57117 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-read-rec-ind  MATCH NOT FOUND
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  57117  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.169.53.146  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  57119 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  57119
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  57119 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-read-rec-ind  MATCH NOT FOUND
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: FAILED, FRAME:  57119  CONTINUE PROTOCOL CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.88
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57120  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.79.147
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57121  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.79.147
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57122  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.160.79.147
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57123  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57894  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57895  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57896  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57897  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57898  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57899  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57900  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57901  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.66.133
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57902  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57904  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57905  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.174.53.142
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
	-----------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: FAILED, FRAME:  57906  CONTINUE IP CHECKS

frameworkTestDriver: identifyPacket:  IDENTIFY IP CHECK LIST:  [{'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}]
	-----------------------------------------------------------------

frameworkTestDriver: doIPCheck:  IP CHECK DICT:  {'LAYER': 'ip', 'GETVAR': 'YAML_IP_DST', 'ADVANCE_PARAMS': None, 'TYPE': 'ip_check_dst', 'ORDER': 1, 'MATCH': 'exists'}
frameworkTestDriver: doIPCheck:  IP VARIABLE GETVAR:  YAML_IP_DST
frameworkTestDriver: doIPCheck:  IP VARIABLE VALUE:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  IP CHECK TYPE IS:  ip_check_dst
frameworkTestDriver: doIPCheck:  PACKET IP IS:  10.168.210.90
frameworkTestDriver: doIPCheck:  IP CHECK MATCH:  exists
frameworkTestDriver: doIPCheck:  IP:  10.168.210.90  IS FOUND IN:  172.18.74.22, 10.169.53.139, 10.174.68.40, 10.168.210.90, 10.169.53.146
frameworkTestDriver: doIPCheck:  frame number is:  64725 result:  1
frameworkTestDriver: doIPCheck:  result:  1  matched with result_max:  1
frameworkTestDriver: doIPCheck:  frame number is:  64725
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY IP CHECK: PASSED, FRAME:  64725 

frameworkTestDriver: identifyPacket:  IDENTIFY PROTOCOL CHECK:  [{'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}, {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'METHOD_NAME': 'm-read-rec-ind', 'LAYER': 'mmse', 'METHOD_ID': '135', 'ADVANCE_PARAMS': None, 'TYPE': 'method_match', 'ORDER': 2, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  method_match
frameworkTestDriver: doProtocolCheck:  Method name:  m-read-rec-ind  MATCH FOUND
frameworkTestDriver: doProtocolCheck:  frame number is:  64725 result:  1
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'LAYER': 'mmse', 'HEADER_NAME': 'Message-Id', 'GETVAR': 'PACKET_MMSE_MID', 'ADVANCE_PARAMS': {'header_multiple': 'false'}, 'TYPE': 'parse_header', 'ORDER': 3, 'MATCH': 'equals'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
frameworkTestDriver: doProtocolCheck:  MATCH VALUE IS:  equals
frameworkTestDriver: doProtocolCheck:  HEADER GETVAR IS:  PACKET_MMSE_MID  HEADER GET VALUE IS:  mavodi-1-88-3-3-65-58641b8d-520af9c91f43
frameworkTestDriver: doProtocolCheck:  HEADER NAME:  Message-Id  MATCHED:  mavodi-1-88-3-3-65-58641b8d-520af9c91f43
frameworkTestDriver: doProtocolCheck:  result:  2  matched with result_max:  2
frameworkTestDriver: doProtocolCheck:  frame number is:  64725
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: identifyPacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;IDENTIFY PROTOCOL CHECK: PASSED, FRAME:  64725 

*****************************************************************


*****************************************************************


frameworkTestDriver: validatePacket:  VALIDATE PACKET DICTIONARY LIST:  [{'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 4, 'DICTS': [{'key': 'MESSAGE_TYPE', 'value': '135'}, {'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'TO'}, {'key': 'READ_STATUS', 'value': '128'}]}]
frameworkTestDriver: validatePacket:  Validate MMSE M-READ-REC-IND method for reqired MSISDN
frameworkTestDriver: validatePacket:  VALIDATE DICT:  {'LAYER': 'mmse', 'TYPE': 'mmse_validation', 'ORDER': 4, 'DICTS': [{'key': 'MESSAGE_TYPE', 'value': '135'}, {'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}, {'GETVAR': 'YAML_MSISDN_A', 'key': 'TO'}, {'key': 'READ_STATUS', 'value': '128'}]}
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'MESSAGE_TYPE', 'value': '135'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  MESSAGE_TYPE
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  135
frameworkTestDriver: validatePacket:  PARAM KEY:  MESSAGE_TYPE  PARAM VAL:  135
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'GETVAR': 'PACKET_MMSE_MID', 'key': 'MESSAGE_ID'}
frameworkTestDriver: validatePacket:  KEY IS:  GETVAR  DICT ELEM KEY IS:  PACKET_MMSE_MID
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  MESSAGE_ID
frameworkTestDriver: validatePacket:  PARAM KEY:  MESSAGE_ID  PARAM VAL:  mavodi-1-88-3-3-65-58641b8d-520af9c91f43
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'GETVAR': 'YAML_MSISDN_A', 'key': 'TO'}
frameworkTestDriver: validatePacket:  KEY IS:  GETVAR  DICT ELEM KEY IS:  YAML_MSISDN_A
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  TO
frameworkTestDriver: validatePacket:  PARAM KEY:  TO  PARAM VAL:  12010500100
frameworkTestDriver: validatePacket:  DICT ELEM IS:  {'key': 'READ_STATUS', 'value': '128'}
frameworkTestDriver: validatePacket:  KEY IS:  key  DICT ELEM KEY IS:  READ_STATUS
frameworkTestDriver: validatePacket:  KEY IS:  value  DICT ELEM KEY IS:  128
frameworkTestDriver: validatePacket:  PARAM KEY:  READ_STATUS  PARAM VAL:  128
frameworkTestDriver: validatePacket:  ORDERED VALIDATE PARAM DICT:  OrderedDict([('MESSAGE_TYPE', '135'), ('MESSAGE_ID', 'mavodi-1-88-3-3-65-58641b8d-520af9c91f43'), ('TO', '12010500100'), ('READ_STATUS', '128')])
mmse_message_validation: validateMMSEMessage: Checking for : MESSAGE_TYPE
mmse_message_validation: validateMMSEMessage: actual_value 135
mmse_message_validation: validateMMSEMessage: print_value 	Expected: MESSAGE_TYPE- 135		Actual: MESSAGE_TYPE- 135
mmse_message_validation: validateMMSEMessage: Checking for : MESSAGE_ID
mmse_message_validation: validateMMSEMessage: actual_value mavodi-1-88-3-3-65-58641b8d-520af9c91f43
mmse_message_validation: validateMMSEMessage: print_value 	Expected: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43		Actual: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43
mmse_message_validation: validateMMSEMessage: Checking for : TO
mmse_message_validation: validateMMSEMessage: actual_value 12010500100
mmse_message_validation: validateMMSEMessage: print_value 	Expected: TO- 12010500100		Actual: TO- 12010500100
mmse_message_validation: validateMMSEMessage: Checking for : READ_STATUS
mmse_message_validation: validateMMSEMessage: actual_value 128
mmse_message_validation: validateMMSEMessage: print_value 	Expected: READ_STATUS- 128		Actual: READ_STATUS- 128
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: validatePacket:  VALIDATE PACKET RESULT:  ['Validate MMSE M-SEND-REQ method for reqired MSISDN', 'Validate MMSE M-SEND-CONF method for reqired MSISDN', 'Validate MMSE M-SEND-CONF2 method for reqired MSISDN', 'Validate diameter UDR', 'Validate diameter UDA', 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN', 'Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN', 'Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN', 'Validate MMSE M-RETRIEVE-CONF GET method for reqired MSISDN', 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN', 'Validate MMSE M-READ-REC-IND method for reqired MSISDN']
frameworkTestDriver: validatePacket:  VALIDATE PACKET MESSAGE:  ['&lt;b style="color:green"&gt;Validate MMSE M-SEND-REQ method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: IMSI- 310310990010060\t\tActual: IMSI- 310310990010060 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF2 method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate diameter UDR&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: CMD_CODE- 306\t\tActual: CMD_CODE- 306 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500100\t\tActual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate diameter UDA&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: SESSION_ID- tmormstp2.mavenir.com;230429661;34891\t\tActual: SESSION_ID- tmormstp2.mavenir.com;230429661;34891 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT\t\tActual: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: FROM- 12010500100\t\tActual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: FROM- 12010500100\t\tActual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: SMPPBIND- 2300\t\tActual: SMPPBIND- 2300 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500082\t\tActual: MSISDN- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- POST\t\tActual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: REQUEST_URI- /mms/wapenc\t\tActual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500082\t\tActual: MSISDN- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MESSAGE_TYPE- 131\t\tActual: MESSAGE_TYPE- 131 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: TRANSACTION_ID- mavodi-1-89-1-3-65-1-8e-2-65-50e7002\t\tActual: TRANSACTION_ID- mavodi-1-89-1-3-65-1-8e-2-65-50e7002 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: STATUS- 129\t\tActual: STATUS- 129 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: RESPONSE_CODE- 200\t\tActual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: CONTENT_TYPE- application/vnd.wap.mms-message\t\tActual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MESSAGE_TYPE- 132\t\tActual: MESSAGE_TYPE- 132 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43\t\tActual: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: TO- 12010500082\t\tActual: TO- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: FROM- 12010500100\t\tActual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-RETRIEVE-CONF GET method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: REQUEST_METHOD- GET\t\tActual: REQUEST_METHOD- GET - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MSISDN- 12010500082\t\tActual: MSISDN- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43\t\tActual: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: TO- 12010500082\t\tActual: TO- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43\t\tActual: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: TO- 12010500082\t\tActual: TO- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: SMPPDESTADDR- 12010500100\t\tActual: SMPPDESTADDR- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: SMPPBIND- 2300\t\tActual: SMPPBIND- 2300 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n', '&lt;b style="color:green"&gt;Validate MMSE M-READ-REC-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; ', '\tExpected: MESSAGE_TYPE- 135\t\tActual: MESSAGE_TYPE- 135 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43\t\tActual: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: TO- 12010500100\t\tActual: TO- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n\tExpected: READ_STATUS- 128\t\tActual: READ_STATUS- 128 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;\n']
frameworkTestDriver: validatePacket:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;VALIDATE PACKET CHECK: PASSED, FRAME:  64725 

*****************************************************************


frameworkTestDriver: postValidation:  POST_VALIDATION PROTOCOL CHECK:  [{'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 5, 'SETVAR': 'PACKET_NUM_MMSE_READREC_IND'}]
	-----------------------------------------------------------------

frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK DICT:  {'TYPE': 'parse_header', 'LAYER': 'frame', 'HEADER_NAME': 'FRAME NUMBER', 'ORDER': 5, 'SETVAR': 'PACKET_NUM_MMSE_READREC_IND'}
frameworkTestDriver: doProtocolCheck:  PROTOCOL CHECK TYPE IS:  parse_header
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


frameworkTestDriver: postValidation:  				&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;POST_VALIDATION PROTOCOL CHECK: PASSED, FRAME:  64725</msg>
<status status="PASS" endtime="20170118 12:14:35.518" starttime="20170118 12:14:02.452"></status>
</kw>
<kw name="Display Results" library="drt_mmsc_misc_00030">
<msg timestamp="20170118 12:14:35.519" html="yes" level="INFO">&lt;b style="color:green"&gt;Validate MMSE M-SEND-REQ method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; </msg>
<msg timestamp="20170118 12:14:35.519" html="yes" level="INFO">	Expected: REQUEST_METHOD- POST		Actual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: REQUEST_URI- /mms/wapenc		Actual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: CONTENT_TYPE- application/vnd.wap.mms-message		Actual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: MSISDN- 12010500100		Actual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: IMSI- 310310990010060		Actual: IMSI- 310310990010060 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
</msg>
<msg timestamp="20170118 12:14:35.519" html="yes" level="INFO">&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; </msg>
<msg timestamp="20170118 12:14:35.520" html="yes" level="INFO">	Expected: RESPONSE_CODE- 200		Actual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: CONTENT_TYPE- application/vnd.wap.mms-message		Actual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
</msg>
<msg timestamp="20170118 12:14:35.520" html="yes" level="INFO">&lt;b style="color:green"&gt;Validate MMSE M-SEND-CONF2 method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; </msg>
<msg timestamp="20170118 12:14:35.520" html="yes" level="INFO">	Expected: RESPONSE_CODE- 200		Actual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: CONTENT_TYPE- application/vnd.wap.mms-message		Actual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
</msg>
<msg timestamp="20170118 12:14:35.520" html="yes" level="INFO">&lt;b style="color:green"&gt;Validate diameter UDR&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; </msg>
<msg timestamp="20170118 12:14:35.520" html="yes" level="INFO">	Expected: CMD_CODE- 306		Actual: CMD_CODE- 306 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: MSISDN- 12010500100		Actual: MSISDN- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
</msg>
<msg timestamp="20170118 12:14:35.520" html="yes" level="INFO">&lt;b style="color:green"&gt;Validate diameter UDA&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; </msg>
<msg timestamp="20170118 12:14:35.520" html="yes" level="INFO">	Expected: SESSION_ID- tmormstp2.mavenir.com;230429661;34891		Actual: SESSION_ID- tmormstp2.mavenir.com;230429661;34891 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT		Actual: EXPERIMENTAL_RESULT_CODE- 5106 - DIAMETER_ERROR_SUBS_DATA_ABSENT - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
</msg>
<msg timestamp="20170118 12:14:35.520" html="yes" level="INFO">&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; </msg>
<msg timestamp="20170118 12:14:35.521" html="yes" level="INFO">	Expected: FROM- 12010500100		Actual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
</msg>
<msg timestamp="20170118 12:14:35.521" html="yes" level="INFO">&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; </msg>
<msg timestamp="20170118 12:14:35.521" html="yes" level="INFO">	Expected: FROM- 12010500100		Actual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: SMPPBIND- 2300		Actual: SMPPBIND- 2300 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
</msg>
<msg timestamp="20170118 12:14:35.521" html="yes" level="INFO">&lt;b style="color:green"&gt;Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; </msg>
<msg timestamp="20170118 12:14:35.521" html="yes" level="INFO">	Expected: REQUEST_METHOD- POST		Actual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: REQUEST_URI- /mms/wapenc		Actual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: CONTENT_TYPE- application/vnd.wap.mms-message		Actual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: MSISDN- 12010500082		Actual: MSISDN- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
</msg>
<msg timestamp="20170118 12:14:35.521" html="yes" level="INFO">&lt;b style="color:green"&gt;Validate MMSE M-NOTIFIYRESP-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; </msg>
<msg timestamp="20170118 12:14:35.521" html="yes" level="INFO">	Expected: REQUEST_METHOD- POST		Actual: REQUEST_METHOD- POST - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: REQUEST_URI- /mms/wapenc		Actual: REQUEST_URI- /mms/wapenc - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: CONTENT_TYPE- application/vnd.wap.mms-message		Actual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: MSISDN- 12010500082		Actual: MSISDN- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: MESSAGE_TYPE- 131		Actual: MESSAGE_TYPE- 131 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: TRANSACTION_ID- mavodi-1-89-1-3-65-1-8e-2-65-50e7002		Actual: TRANSACTION_ID- mavodi-1-89-1-3-65-1-8e-2-65-50e7002 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: STATUS- 129		Actual: STATUS- 129 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
</msg>
<msg timestamp="20170118 12:14:35.521" html="yes" level="INFO">&lt;b style="color:green"&gt;Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; </msg>
<msg timestamp="20170118 12:14:35.522" html="yes" level="INFO">	Expected: RESPONSE_CODE- 200		Actual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: CONTENT_TYPE- application/vnd.wap.mms-message		Actual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
</msg>
<msg timestamp="20170118 12:14:35.522" html="yes" level="INFO">&lt;b style="color:green"&gt;Validate MMSE M-RETRIEVE-CONF 200 OK method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; </msg>
<msg timestamp="20170118 12:14:35.522" html="yes" level="INFO">	Expected: RESPONSE_CODE- 200		Actual: RESPONSE_CODE- 200 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: CONTENT_TYPE- application/vnd.wap.mms-message		Actual: CONTENT_TYPE- application/vnd.wap.mms-message - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: MESSAGE_TYPE- 132		Actual: MESSAGE_TYPE- 132 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43		Actual: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: TO- 12010500082		Actual: TO- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: FROM- 12010500100		Actual: FROM- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
</msg>
<msg timestamp="20170118 12:14:35.522" html="yes" level="INFO">&lt;b style="color:green"&gt;Validate MMSE M-RETRIEVE-CONF GET method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; </msg>
<msg timestamp="20170118 12:14:35.522" html="yes" level="INFO">	Expected: REQUEST_METHOD- GET		Actual: REQUEST_METHOD- GET - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: MSISDN- 12010500082		Actual: MSISDN- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
</msg>
<msg timestamp="20170118 12:14:35.522" html="yes" level="INFO">&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; </msg>
<msg timestamp="20170118 12:14:35.522" html="yes" level="INFO">	Expected: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43		Actual: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: TO- 12010500082		Actual: TO- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
</msg>
<msg timestamp="20170118 12:14:35.522" html="yes" level="INFO">&lt;b style="color:green"&gt;Validate MMSE M-NOTIFICATION-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; </msg>
<msg timestamp="20170118 12:14:35.523" html="yes" level="INFO">	Expected: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43		Actual: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: TO- 12010500082		Actual: TO- 12010500082 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: SMPPDESTADDR- 12010500100		Actual: SMPPDESTADDR- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: SMPPBIND- 2300		Actual: SMPPBIND- 2300 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
</msg>
<msg timestamp="20170118 12:14:35.523" html="yes" level="INFO">&lt;b style="color:green"&gt;Validate MMSE M-READ-REC-IND method for reqired MSISDN&lt;/b&gt;  - &lt;b style="color:green"&gt;PASS&lt;/b&gt; </msg>
<msg timestamp="20170118 12:14:35.523" html="yes" level="INFO">	Expected: MESSAGE_TYPE- 135		Actual: MESSAGE_TYPE- 135 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43		Actual: MESSAGE_ID- mavodi-1-88-3-3-65-58641b8d-520af9c91f43 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: TO- 12010500100		Actual: TO- 12010500100 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
	Expected: READ_STATUS- 128		Actual: READ_STATUS- 128 - &lt;b style="color:green"&gt;PASS&lt;/b&gt;
</msg>
<status status="PASS" endtime="20170118 12:14:35.526" starttime="20170118 12:14:35.518"></status>
</kw>
<doc>Single line Registration This testcase verifies the single line registration in chrome browser</doc>
<status status="PASS" endtime="20170118 12:14:35.527" critical="yes" starttime="20170118 12:14:02.447"></status>
</test>
<status status="PASS" endtime="20170118 12:14:35.528" starttime="20170118 12:14:02.225"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Drt Mmsc Misc 00030" pass="1">Drt Mmsc Misc 00030</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
